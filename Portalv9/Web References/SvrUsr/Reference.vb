'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.5448
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=2.0.50727.5448.
'
Namespace SvrUsr
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="CoreSoap", [Namespace]:="Main")>  _
    Partial Public Class Core
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ColDomOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_DomicilioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_DynamicUsrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_Identificador_sistemaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_DynamicUsrDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoginSinProyectoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LogOffOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ActualizarTicketOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CambiarPasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CambiarPasswordAjenoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ScriptValidaPwdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidaPermisoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaAplicacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaVersionAplicacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaPermisoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColAplicacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColEstacionTrabajoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColVersionAplicacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColPermisosVersionAplicacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColAplicacionVersionPermisoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColModulosVersionAplicacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColModulosReqVersionAplicacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColRequerimientosModuloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColRequerimientosXModuloIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_EstacionTrabajoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_AplicacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_VersionAplicacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_PermisoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_ModuloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_RequerimientoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_ReqModuloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_ClienteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColProyectosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColClientesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColClientesProyectosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColProyectosUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaProyectoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_ProyectoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColPermisosUsuarioProyectoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColPermisosUsuarioProyectoSinTicketOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColPermisosUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColHistAccesoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerHistAccesoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaPoliticaSesionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_PoliticaSesionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColPoliticasSesionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaPoliticaPwdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_PoliticaPwdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColPoliticasPwdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DatosIdentidadUsrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColIdentidadUsrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColIdentidadUsrRespOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColUsuariosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColPerfilesUsrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColPerfilesUsrPropioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColUsuariosAdministrarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColUsuariosAdministrartodoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_IdentidadUsrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColGrupoAdminOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColGrupoAdminHijosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_GrupoAdminOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColPerfilesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColUsuariosPerfilOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColProyectosPerfilOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColPermisosPerfilOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColTodoslosPerfilesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_PerfilIdentidadUsrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_PerfilUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_PermisoPerfilUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_PerfilUsuarioProyectoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegistraIntentoAccesoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerHistAccesoUsrxEventoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColEventosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColEventosResOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegistraEventosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColClientexGrupoAdminOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerMenuOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerSubMenuOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerTemplateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerElementosComboEstOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerElementosComboDinOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EjecutaSPCondicionalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColProyectosMegaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCadenaConexionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerCadenaConexionDSNOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ABC_AppProyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaAppProyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColAppProyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColAppProyTipoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColBusAppProyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EncriptarPwdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DesencriptarPwdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColResponsableAdministrarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidaUsrForaneoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidaUsrForaneoIPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColDynamicUsrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColIdentificador_sistemaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Genera_ArchivoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ColDynamicUsrDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneraNombreArchivoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BuscaXNombreTablaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RptAdminPerfilPermisosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RptAdminUsrXGrupoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RptAdminUsrXPerfilOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CambiarUltLoginOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegistraAccesoConsultasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RegistraAccesoDigitalizacionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaConexionesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaConexionDiccionarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargaPWD_XMLCFGOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AsignaPWD_XMLCFGOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCFGParametoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveCFGParametoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HSMColPermisosUsrOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Portalv9.My.MySettings.Default.Portalv9_SvrUsr_Core
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ColDomCompleted As ColDomCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_DomicilioCompleted As ABC_DomicilioCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_DynamicUsrCompleted As ABC_DynamicUsrCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_Identificador_sistemaCompleted As ABC_Identificador_sistemaCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_DynamicUsrDataCompleted As ABC_DynamicUsrDataCompletedEventHandler
        
        '''<remarks/>
        Public Event LoginCompleted As LoginCompletedEventHandler
        
        '''<remarks/>
        Public Event LoginSinProyectoCompleted As LoginSinProyectoCompletedEventHandler
        
        '''<remarks/>
        Public Event LogOffCompleted As LogOffCompletedEventHandler
        
        '''<remarks/>
        Public Event ActualizarTicketCompleted As ActualizarTicketCompletedEventHandler
        
        '''<remarks/>
        Public Event CambiarPasswordCompleted As CambiarPasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event CambiarPasswordAjenoCompleted As CambiarPasswordAjenoCompletedEventHandler
        
        '''<remarks/>
        Public Event ScriptValidaPwdCompleted As ScriptValidaPwdCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidaPermisoCompleted As ValidaPermisoCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaAplicacionCompleted As CargaAplicacionCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaVersionAplicacionCompleted As CargaVersionAplicacionCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaPermisoCompleted As CargaPermisoCompletedEventHandler
        
        '''<remarks/>
        Public Event ColAplicacionCompleted As ColAplicacionCompletedEventHandler
        
        '''<remarks/>
        Public Event ColEstacionTrabajoCompleted As ColEstacionTrabajoCompletedEventHandler
        
        '''<remarks/>
        Public Event ColVersionAplicacionCompleted As ColVersionAplicacionCompletedEventHandler
        
        '''<remarks/>
        Public Event ColPermisosVersionAplicacionCompleted As ColPermisosVersionAplicacionCompletedEventHandler
        
        '''<remarks/>
        Public Event ColAplicacionVersionPermisoCompleted As ColAplicacionVersionPermisoCompletedEventHandler
        
        '''<remarks/>
        Public Event ColModulosVersionAplicacionCompleted As ColModulosVersionAplicacionCompletedEventHandler
        
        '''<remarks/>
        Public Event ColModulosReqVersionAplicacionCompleted As ColModulosReqVersionAplicacionCompletedEventHandler
        
        '''<remarks/>
        Public Event ColRequerimientosModuloCompleted As ColRequerimientosModuloCompletedEventHandler
        
        '''<remarks/>
        Public Event ColRequerimientosXModuloIDCompleted As ColRequerimientosXModuloIDCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_EstacionTrabajoCompleted As ABC_EstacionTrabajoCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_AplicacionCompleted As ABC_AplicacionCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_VersionAplicacionCompleted As ABC_VersionAplicacionCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_PermisoCompleted As ABC_PermisoCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_ModuloCompleted As ABC_ModuloCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_RequerimientoCompleted As ABC_RequerimientoCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_ReqModuloCompleted As ABC_ReqModuloCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaClienteCompleted As CargaClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_ClienteCompleted As ABC_ClienteCompletedEventHandler
        
        '''<remarks/>
        Public Event ColProyectosCompleted As ColProyectosCompletedEventHandler
        
        '''<remarks/>
        Public Event ColClientesCompleted As ColClientesCompletedEventHandler
        
        '''<remarks/>
        Public Event ColClientesProyectosCompleted As ColClientesProyectosCompletedEventHandler
        
        '''<remarks/>
        Public Event ColProyectosUsuarioCompleted As ColProyectosUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaProyectoCompleted As CargaProyectoCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_ProyectoCompleted As ABC_ProyectoCompletedEventHandler
        
        '''<remarks/>
        Public Event ColPermisosUsuarioProyectoCompleted As ColPermisosUsuarioProyectoCompletedEventHandler
        
        '''<remarks/>
        Public Event ColPermisosUsuarioProyectoSinTicketCompleted As ColPermisosUsuarioProyectoSinTicketCompletedEventHandler
        
        '''<remarks/>
        Public Event ColPermisosUsuarioCompleted As ColPermisosUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event ColHistAccesoCompleted As ColHistAccesoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerHistAccesoCompleted As ObtenerHistAccesoCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaPoliticaSesionCompleted As CargaPoliticaSesionCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_PoliticaSesionCompleted As ABC_PoliticaSesionCompletedEventHandler
        
        '''<remarks/>
        Public Event ColPoliticasSesionCompleted As ColPoliticasSesionCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaPoliticaPwdCompleted As CargaPoliticaPwdCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_PoliticaPwdCompleted As ABC_PoliticaPwdCompletedEventHandler
        
        '''<remarks/>
        Public Event ColPoliticasPwdCompleted As ColPoliticasPwdCompletedEventHandler
        
        '''<remarks/>
        Public Event DatosIdentidadUsrCompleted As DatosIdentidadUsrCompletedEventHandler
        
        '''<remarks/>
        Public Event ColIdentidadUsrCompleted As ColIdentidadUsrCompletedEventHandler
        
        '''<remarks/>
        Public Event ColIdentidadUsrRespCompleted As ColIdentidadUsrRespCompletedEventHandler
        
        '''<remarks/>
        Public Event ColUsuariosCompleted As ColUsuariosCompletedEventHandler
        
        '''<remarks/>
        Public Event ColPerfilesUsrCompleted As ColPerfilesUsrCompletedEventHandler
        
        '''<remarks/>
        Public Event ColPerfilesUsrPropioCompleted As ColPerfilesUsrPropioCompletedEventHandler
        
        '''<remarks/>
        Public Event ColUsuariosAdministrarCompleted As ColUsuariosAdministrarCompletedEventHandler
        
        '''<remarks/>
        Public Event ColUsuariosAdministrartodoCompleted As ColUsuariosAdministrartodoCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_IdentidadUsrCompleted As ABC_IdentidadUsrCompletedEventHandler
        
        '''<remarks/>
        Public Event ColGrupoAdminCompleted As ColGrupoAdminCompletedEventHandler
        
        '''<remarks/>
        Public Event ColGrupoAdminHijosCompleted As ColGrupoAdminHijosCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_GrupoAdminCompleted As ABC_GrupoAdminCompletedEventHandler
        
        '''<remarks/>
        Public Event ColPerfilesCompleted As ColPerfilesCompletedEventHandler
        
        '''<remarks/>
        Public Event ColUsuariosPerfilCompleted As ColUsuariosPerfilCompletedEventHandler
        
        '''<remarks/>
        Public Event ColProyectosPerfilCompleted As ColProyectosPerfilCompletedEventHandler
        
        '''<remarks/>
        Public Event ColPermisosPerfilCompleted As ColPermisosPerfilCompletedEventHandler
        
        '''<remarks/>
        Public Event ColTodoslosPerfilesCompleted As ColTodoslosPerfilesCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_PerfilIdentidadUsrCompleted As ABC_PerfilIdentidadUsrCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_PerfilUsuarioCompleted As ABC_PerfilUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_PermisoPerfilUsuarioCompleted As ABC_PermisoPerfilUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_PerfilUsuarioProyectoCompleted As ABC_PerfilUsuarioProyectoCompletedEventHandler
        
        '''<remarks/>
        Public Event RegistraIntentoAccesoCompleted As RegistraIntentoAccesoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerHistAccesoUsrxEventoCompleted As ObtenerHistAccesoUsrxEventoCompletedEventHandler
        
        '''<remarks/>
        Public Event ColEventosCompleted As ColEventosCompletedEventHandler
        
        '''<remarks/>
        Public Event ColEventosResCompleted As ColEventosResCompletedEventHandler
        
        '''<remarks/>
        Public Event RegistraEventosCompleted As RegistraEventosCompletedEventHandler
        
        '''<remarks/>
        Public Event ColClientexGrupoAdminCompleted As ColClientexGrupoAdminCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerMenuCompleted As ObtenerMenuCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerSubMenuCompleted As ObtenerSubMenuCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerTemplateCompleted As ObtenerTemplateCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerElementosComboEstCompleted As ObtenerElementosComboEstCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerElementosComboDinCompleted As ObtenerElementosComboDinCompletedEventHandler
        
        '''<remarks/>
        Public Event EjecutaSPCondicionalCompleted As EjecutaSPCondicionalCompletedEventHandler
        
        '''<remarks/>
        Public Event ColProyectosMegaCompleted As ColProyectosMegaCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCadenaConexionCompleted As ObtenerCadenaConexionCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerCadenaConexionDSNCompleted As ObtenerCadenaConexionDSNCompletedEventHandler
        
        '''<remarks/>
        Public Event ABC_AppProyCompleted As ABC_AppProyCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaAppProyCompleted As CargaAppProyCompletedEventHandler
        
        '''<remarks/>
        Public Event ColAppProyCompleted As ColAppProyCompletedEventHandler
        
        '''<remarks/>
        Public Event ColAppProyTipoCompleted As ColAppProyTipoCompletedEventHandler
        
        '''<remarks/>
        Public Event ColBusAppProyCompleted As ColBusAppProyCompletedEventHandler
        
        '''<remarks/>
        Public Event EncriptarPwdCompleted As EncriptarPwdCompletedEventHandler
        
        '''<remarks/>
        Public Event DesencriptarPwdCompleted As DesencriptarPwdCompletedEventHandler
        
        '''<remarks/>
        Public Event ColResponsableAdministrarCompleted As ColResponsableAdministrarCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidaUsrForaneoCompleted As ValidaUsrForaneoCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidaUsrForaneoIPCompleted As ValidaUsrForaneoIPCompletedEventHandler
        
        '''<remarks/>
        Public Event ColDynamicUsrCompleted As ColDynamicUsrCompletedEventHandler
        
        '''<remarks/>
        Public Event ColIdentificador_sistemaCompleted As ColIdentificador_sistemaCompletedEventHandler
        
        '''<remarks/>
        Public Event Genera_ArchivoCompleted As Genera_ArchivoCompletedEventHandler
        
        '''<remarks/>
        Public Event ColDynamicUsrDataCompleted As ColDynamicUsrDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GeneraNombreArchivoCompleted As GeneraNombreArchivoCompletedEventHandler
        
        '''<remarks/>
        Public Event BuscaXNombreTablaCompleted As BuscaXNombreTablaCompletedEventHandler
        
        '''<remarks/>
        Public Event RptAdminPerfilPermisosCompleted As RptAdminPerfilPermisosCompletedEventHandler
        
        '''<remarks/>
        Public Event RptAdminUsrXGrupoCompleted As RptAdminUsrXGrupoCompletedEventHandler
        
        '''<remarks/>
        Public Event RptAdminUsrXPerfilCompleted As RptAdminUsrXPerfilCompletedEventHandler
        
        '''<remarks/>
        Public Event CambiarUltLoginCompleted As CambiarUltLoginCompletedEventHandler
        
        '''<remarks/>
        Public Event RegistraAccesoConsultasCompleted As RegistraAccesoConsultasCompletedEventHandler
        
        '''<remarks/>
        Public Event RegistraAccesoDigitalizacionCompleted As RegistraAccesoDigitalizacionCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaConexionesCompleted As CargaConexionesCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaConexionDiccionarioCompleted As CargaConexionDiccionarioCompletedEventHandler
        
        '''<remarks/>
        Public Event CargaPWD_XMLCFGCompleted As CargaPWD_XMLCFGCompletedEventHandler
        
        '''<remarks/>
        Public Event AsignaPWD_XMLCFGCompleted As AsignaPWD_XMLCFGCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCFGParametoCompleted As GetCFGParametoCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveCFGParametoCompleted As SaveCFGParametoCompletedEventHandler
        
        '''<remarks/>
        Public Event HSMColPermisosUsrCompleted As HSMColPermisosUsrCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColDom", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColDom(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColDom", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColDomAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ColDomAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColDomAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColDomOperationCompleted Is Nothing) Then
                Me.ColDomOperationCompleted = AddressOf Me.OnColDomOperationCompleted
            End If
            Me.InvokeAsync("ColDom", New Object() {ptTicket, pRespuesta}, Me.ColDomOperationCompleted, userState)
        End Sub
        
        Private Sub OnColDomOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColDomCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColDomCompleted(Me, New ColDomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_Domicilio", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_Domicilio(ByRef ptTicket As IDTicket, ByRef pDomicilio As Domicilio, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta) As Integer
            Dim results() As Object = Me.Invoke("ABC_Domicilio", New Object() {ptTicket, pDomicilio, poperABC, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pDomicilio = CType(results(2),Domicilio)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_DomicilioAsync(ByVal ptTicket As IDTicket, ByVal pDomicilio As Domicilio, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta)
            Me.ABC_DomicilioAsync(ptTicket, pDomicilio, poperABC, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_DomicilioAsync(ByVal ptTicket As IDTicket, ByVal pDomicilio As Domicilio, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ABC_DomicilioOperationCompleted Is Nothing) Then
                Me.ABC_DomicilioOperationCompleted = AddressOf Me.OnABC_DomicilioOperationCompleted
            End If
            Me.InvokeAsync("ABC_Domicilio", New Object() {ptTicket, pDomicilio, poperABC, pRespuesta}, Me.ABC_DomicilioOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_DomicilioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_DomicilioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_DomicilioCompleted(Me, New ABC_DomicilioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_DynamicUsr", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_DynamicUsr(ByRef ptTicket As IDTicket, ByRef pDynamicUsr As DynamicUsr, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta, ByVal sDescripcion As String) As Integer
            Dim results() As Object = Me.Invoke("ABC_DynamicUsr", New Object() {ptTicket, pDynamicUsr, poperABC, pRespuesta, sDescripcion})
            ptTicket = CType(results(1),IDTicket)
            pDynamicUsr = CType(results(2),DynamicUsr)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_DynamicUsrAsync(ByVal ptTicket As IDTicket, ByVal pDynamicUsr As DynamicUsr, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal sDescripcion As String)
            Me.ABC_DynamicUsrAsync(ptTicket, pDynamicUsr, poperABC, pRespuesta, sDescripcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_DynamicUsrAsync(ByVal ptTicket As IDTicket, ByVal pDynamicUsr As DynamicUsr, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal sDescripcion As String, ByVal userState As Object)
            If (Me.ABC_DynamicUsrOperationCompleted Is Nothing) Then
                Me.ABC_DynamicUsrOperationCompleted = AddressOf Me.OnABC_DynamicUsrOperationCompleted
            End If
            Me.InvokeAsync("ABC_DynamicUsr", New Object() {ptTicket, pDynamicUsr, poperABC, pRespuesta, sDescripcion}, Me.ABC_DynamicUsrOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_DynamicUsrOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_DynamicUsrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_DynamicUsrCompleted(Me, New ABC_DynamicUsrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_Identificador_sistema", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_Identificador_sistema(ByRef ptTicket As IDTicket, ByRef pIdentificador_sistema As Identificador_sistema, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta) As Integer
            Dim results() As Object = Me.Invoke("ABC_Identificador_sistema", New Object() {ptTicket, pIdentificador_sistema, poperABC, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pIdentificador_sistema = CType(results(2),Identificador_sistema)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_Identificador_sistemaAsync(ByVal ptTicket As IDTicket, ByVal pIdentificador_sistema As Identificador_sistema, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta)
            Me.ABC_Identificador_sistemaAsync(ptTicket, pIdentificador_sistema, poperABC, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_Identificador_sistemaAsync(ByVal ptTicket As IDTicket, ByVal pIdentificador_sistema As Identificador_sistema, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ABC_Identificador_sistemaOperationCompleted Is Nothing) Then
                Me.ABC_Identificador_sistemaOperationCompleted = AddressOf Me.OnABC_Identificador_sistemaOperationCompleted
            End If
            Me.InvokeAsync("ABC_Identificador_sistema", New Object() {ptTicket, pIdentificador_sistema, poperABC, pRespuesta}, Me.ABC_Identificador_sistemaOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_Identificador_sistemaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_Identificador_sistemaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_Identificador_sistemaCompleted(Me, New ABC_Identificador_sistemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_DynamicUsrData", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_DynamicUsrData(ByRef ptTicket As IDTicket, ByRef pDynamicUsrData As DynamicUsrData, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta) As Integer
            Dim results() As Object = Me.Invoke("ABC_DynamicUsrData", New Object() {ptTicket, pDynamicUsrData, poperABC, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pDynamicUsrData = CType(results(2),DynamicUsrData)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_DynamicUsrDataAsync(ByVal ptTicket As IDTicket, ByVal pDynamicUsrData As DynamicUsrData, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta)
            Me.ABC_DynamicUsrDataAsync(ptTicket, pDynamicUsrData, poperABC, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_DynamicUsrDataAsync(ByVal ptTicket As IDTicket, ByVal pDynamicUsrData As DynamicUsrData, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ABC_DynamicUsrDataOperationCompleted Is Nothing) Then
                Me.ABC_DynamicUsrDataOperationCompleted = AddressOf Me.OnABC_DynamicUsrDataOperationCompleted
            End If
            Me.InvokeAsync("ABC_DynamicUsrData", New Object() {ptTicket, pDynamicUsrData, poperABC, pRespuesta}, Me.ABC_DynamicUsrDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_DynamicUsrDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_DynamicUsrDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_DynamicUsrDataCompleted(Me, New ABC_DynamicUsrDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/Login", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Login(ByVal pstrUsrID As String, ByVal pstrPwd As String, ByVal plngVersionAplicacionID As Integer, ByVal plngProyectoID As Integer, ByVal pstrIP As String, ByRef pRespuesta As Respuesta) As IDTicket
            Dim results() As Object = Me.Invoke("Login", New Object() {pstrUsrID, pstrPwd, plngVersionAplicacionID, plngProyectoID, pstrIP, pRespuesta})
            pRespuesta = CType(results(1),Respuesta)
            Return CType(results(0),IDTicket)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoginAsync(ByVal pstrUsrID As String, ByVal pstrPwd As String, ByVal plngVersionAplicacionID As Integer, ByVal plngProyectoID As Integer, ByVal pstrIP As String, ByVal pRespuesta As Respuesta)
            Me.LoginAsync(pstrUsrID, pstrPwd, plngVersionAplicacionID, plngProyectoID, pstrIP, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoginAsync(ByVal pstrUsrID As String, ByVal pstrPwd As String, ByVal plngVersionAplicacionID As Integer, ByVal plngProyectoID As Integer, ByVal pstrIP As String, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.LoginOperationCompleted Is Nothing) Then
                Me.LoginOperationCompleted = AddressOf Me.OnLoginOperationCompleted
            End If
            Me.InvokeAsync("Login", New Object() {pstrUsrID, pstrPwd, plngVersionAplicacionID, plngProyectoID, pstrIP, pRespuesta}, Me.LoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoginCompleted(Me, New LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/LoginSinProyecto", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoginSinProyecto(ByVal pstrUsrID As String, ByVal pstrPwd As String, ByVal plngVersionAplicacionID As Integer, ByVal pstrIP As String, ByRef pRespuesta As Respuesta) As IDTicket
            Dim results() As Object = Me.Invoke("LoginSinProyecto", New Object() {pstrUsrID, pstrPwd, plngVersionAplicacionID, pstrIP, pRespuesta})
            pRespuesta = CType(results(1),Respuesta)
            Return CType(results(0),IDTicket)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoginSinProyectoAsync(ByVal pstrUsrID As String, ByVal pstrPwd As String, ByVal plngVersionAplicacionID As Integer, ByVal pstrIP As String, ByVal pRespuesta As Respuesta)
            Me.LoginSinProyectoAsync(pstrUsrID, pstrPwd, plngVersionAplicacionID, pstrIP, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoginSinProyectoAsync(ByVal pstrUsrID As String, ByVal pstrPwd As String, ByVal plngVersionAplicacionID As Integer, ByVal pstrIP As String, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.LoginSinProyectoOperationCompleted Is Nothing) Then
                Me.LoginSinProyectoOperationCompleted = AddressOf Me.OnLoginSinProyectoOperationCompleted
            End If
            Me.InvokeAsync("LoginSinProyecto", New Object() {pstrUsrID, pstrPwd, plngVersionAplicacionID, pstrIP, pRespuesta}, Me.LoginSinProyectoOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoginSinProyectoOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoginSinProyectoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoginSinProyectoCompleted(Me, New LoginSinProyectoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/LogOff", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LogOff(ByRef ptTicket As IDTicket)
            Dim results() As Object = Me.Invoke("LogOff", New Object() {ptTicket})
            ptTicket = CType(results(0),IDTicket)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LogOffAsync(ByVal ptTicket As IDTicket)
            Me.LogOffAsync(ptTicket, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LogOffAsync(ByVal ptTicket As IDTicket, ByVal userState As Object)
            If (Me.LogOffOperationCompleted Is Nothing) Then
                Me.LogOffOperationCompleted = AddressOf Me.OnLogOffOperationCompleted
            End If
            Me.InvokeAsync("LogOff", New Object() {ptTicket}, Me.LogOffOperationCompleted, userState)
        End Sub
        
        Private Sub OnLogOffOperationCompleted(ByVal arg As Object)
            If (Not (Me.LogOffCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LogOffCompleted(Me, New LogOffCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ActualizarTicket", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ActualizarTicket(ByRef pTicket As IDTicket, ByRef pRespuesta As Respuesta)
            Dim results() As Object = Me.Invoke("ActualizarTicket", New Object() {pTicket, pRespuesta})
            pTicket = CType(results(0),IDTicket)
            pRespuesta = CType(results(1),Respuesta)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizarTicketAsync(ByVal pTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ActualizarTicketAsync(pTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ActualizarTicketAsync(ByVal pTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ActualizarTicketOperationCompleted Is Nothing) Then
                Me.ActualizarTicketOperationCompleted = AddressOf Me.OnActualizarTicketOperationCompleted
            End If
            Me.InvokeAsync("ActualizarTicket", New Object() {pTicket, pRespuesta}, Me.ActualizarTicketOperationCompleted, userState)
        End Sub
        
        Private Sub OnActualizarTicketOperationCompleted(ByVal arg As Object)
            If (Not (Me.ActualizarTicketCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ActualizarTicketCompleted(Me, New ActualizarTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/CambiarPassword", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CambiarPassword(ByRef ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pstrPwd As String, ByVal pstrNuevoPwd As String, ByVal pDescripcion As String) As Respuesta
            Dim results() As Object = Me.Invoke("CambiarPassword", New Object() {ptTicket, pstrUsrID, pstrPwd, pstrNuevoPwd, pDescripcion})
            ptTicket = CType(results(1),IDTicket)
            Return CType(results(0),Respuesta)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CambiarPasswordAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pstrPwd As String, ByVal pstrNuevoPwd As String, ByVal pDescripcion As String)
            Me.CambiarPasswordAsync(ptTicket, pstrUsrID, pstrPwd, pstrNuevoPwd, pDescripcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CambiarPasswordAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pstrPwd As String, ByVal pstrNuevoPwd As String, ByVal pDescripcion As String, ByVal userState As Object)
            If (Me.CambiarPasswordOperationCompleted Is Nothing) Then
                Me.CambiarPasswordOperationCompleted = AddressOf Me.OnCambiarPasswordOperationCompleted
            End If
            Me.InvokeAsync("CambiarPassword", New Object() {ptTicket, pstrUsrID, pstrPwd, pstrNuevoPwd, pDescripcion}, Me.CambiarPasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnCambiarPasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.CambiarPasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CambiarPasswordCompleted(Me, New CambiarPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/CambiarPasswordAjeno", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CambiarPasswordAjeno(ByRef ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pstrNuevoPwd As String, ByVal pDescripcion As String) As Respuesta
            Dim results() As Object = Me.Invoke("CambiarPasswordAjeno", New Object() {ptTicket, pstrUsrID, pstrNuevoPwd, pDescripcion})
            ptTicket = CType(results(1),IDTicket)
            Return CType(results(0),Respuesta)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CambiarPasswordAjenoAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pstrNuevoPwd As String, ByVal pDescripcion As String)
            Me.CambiarPasswordAjenoAsync(ptTicket, pstrUsrID, pstrNuevoPwd, pDescripcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CambiarPasswordAjenoAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pstrNuevoPwd As String, ByVal pDescripcion As String, ByVal userState As Object)
            If (Me.CambiarPasswordAjenoOperationCompleted Is Nothing) Then
                Me.CambiarPasswordAjenoOperationCompleted = AddressOf Me.OnCambiarPasswordAjenoOperationCompleted
            End If
            Me.InvokeAsync("CambiarPasswordAjeno", New Object() {ptTicket, pstrUsrID, pstrNuevoPwd, pDescripcion}, Me.CambiarPasswordAjenoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCambiarPasswordAjenoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CambiarPasswordAjenoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CambiarPasswordAjenoCompleted(Me, New CambiarPasswordAjenoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ScriptValidaPwd", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ScriptValidaPwd(ByRef ptTicket As IDTicket, ByVal pstrUsrID As String, ByRef pstrScript As String, ByRef pstrScriptID As String) As Respuesta
            Dim results() As Object = Me.Invoke("ScriptValidaPwd", New Object() {ptTicket, pstrUsrID, pstrScript, pstrScriptID})
            ptTicket = CType(results(1),IDTicket)
            pstrScript = CType(results(2),String)
            pstrScriptID = CType(results(3),String)
            Return CType(results(0),Respuesta)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ScriptValidaPwdAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pstrScript As String, ByVal pstrScriptID As String)
            Me.ScriptValidaPwdAsync(ptTicket, pstrUsrID, pstrScript, pstrScriptID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ScriptValidaPwdAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pstrScript As String, ByVal pstrScriptID As String, ByVal userState As Object)
            If (Me.ScriptValidaPwdOperationCompleted Is Nothing) Then
                Me.ScriptValidaPwdOperationCompleted = AddressOf Me.OnScriptValidaPwdOperationCompleted
            End If
            Me.InvokeAsync("ScriptValidaPwd", New Object() {ptTicket, pstrUsrID, pstrScript, pstrScriptID}, Me.ScriptValidaPwdOperationCompleted, userState)
        End Sub
        
        Private Sub OnScriptValidaPwdOperationCompleted(ByVal arg As Object)
            If (Not (Me.ScriptValidaPwdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ScriptValidaPwdCompleted(Me, New ScriptValidaPwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ValidaPermiso", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidaPermiso(ByVal ptTicket As IDTicket, ByVal pPermiso As Permiso) As Respuesta
            Dim results() As Object = Me.Invoke("ValidaPermiso", New Object() {ptTicket, pPermiso})
            Return CType(results(0),Respuesta)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidaPermisoAsync(ByVal ptTicket As IDTicket, ByVal pPermiso As Permiso)
            Me.ValidaPermisoAsync(ptTicket, pPermiso, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidaPermisoAsync(ByVal ptTicket As IDTicket, ByVal pPermiso As Permiso, ByVal userState As Object)
            If (Me.ValidaPermisoOperationCompleted Is Nothing) Then
                Me.ValidaPermisoOperationCompleted = AddressOf Me.OnValidaPermisoOperationCompleted
            End If
            Me.InvokeAsync("ValidaPermiso", New Object() {ptTicket, pPermiso}, Me.ValidaPermisoOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidaPermisoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidaPermisoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidaPermisoCompleted(Me, New ValidaPermisoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/CargaAplicacion", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaAplicacion(ByRef ptTicket As IDTicket, ByVal pnAplicacionID As Integer, ByRef pRespuesta As Respuesta) As Aplicacion
            Dim results() As Object = Me.Invoke("CargaAplicacion", New Object() {ptTicket, pnAplicacionID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),Aplicacion)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaAplicacionAsync(ByVal ptTicket As IDTicket, ByVal pnAplicacionID As Integer, ByVal pRespuesta As Respuesta)
            Me.CargaAplicacionAsync(ptTicket, pnAplicacionID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaAplicacionAsync(ByVal ptTicket As IDTicket, ByVal pnAplicacionID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.CargaAplicacionOperationCompleted Is Nothing) Then
                Me.CargaAplicacionOperationCompleted = AddressOf Me.OnCargaAplicacionOperationCompleted
            End If
            Me.InvokeAsync("CargaAplicacion", New Object() {ptTicket, pnAplicacionID, pRespuesta}, Me.CargaAplicacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaAplicacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaAplicacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaAplicacionCompleted(Me, New CargaAplicacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/CargaVersionAplicacion", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaVersionAplicacion(ByRef ptTicket As IDTicket, ByVal pnVersionAplicacionID As Integer, ByRef pRespuesta As Respuesta) As VersionAplicacion
            Dim results() As Object = Me.Invoke("CargaVersionAplicacion", New Object() {ptTicket, pnVersionAplicacionID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),VersionAplicacion)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaVersionAplicacionAsync(ByVal ptTicket As IDTicket, ByVal pnVersionAplicacionID As Integer, ByVal pRespuesta As Respuesta)
            Me.CargaVersionAplicacionAsync(ptTicket, pnVersionAplicacionID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaVersionAplicacionAsync(ByVal ptTicket As IDTicket, ByVal pnVersionAplicacionID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.CargaVersionAplicacionOperationCompleted Is Nothing) Then
                Me.CargaVersionAplicacionOperationCompleted = AddressOf Me.OnCargaVersionAplicacionOperationCompleted
            End If
            Me.InvokeAsync("CargaVersionAplicacion", New Object() {ptTicket, pnVersionAplicacionID, pRespuesta}, Me.CargaVersionAplicacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaVersionAplicacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaVersionAplicacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaVersionAplicacionCompleted(Me, New CargaVersionAplicacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/CargaPermiso", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaPermiso(ByRef ptTicket As IDTicket, ByVal pnPermisoID As Integer, ByRef pRespuesta As Respuesta) As Permiso
            Dim results() As Object = Me.Invoke("CargaPermiso", New Object() {ptTicket, pnPermisoID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),Permiso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaPermisoAsync(ByVal ptTicket As IDTicket, ByVal pnPermisoID As Integer, ByVal pRespuesta As Respuesta)
            Me.CargaPermisoAsync(ptTicket, pnPermisoID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaPermisoAsync(ByVal ptTicket As IDTicket, ByVal pnPermisoID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.CargaPermisoOperationCompleted Is Nothing) Then
                Me.CargaPermisoOperationCompleted = AddressOf Me.OnCargaPermisoOperationCompleted
            End If
            Me.InvokeAsync("CargaPermiso", New Object() {ptTicket, pnPermisoID, pRespuesta}, Me.CargaPermisoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaPermisoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaPermisoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaPermisoCompleted(Me, New CargaPermisoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColAplicacion", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColAplicacion(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColAplicacion", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColAplicacionAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ColAplicacionAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColAplicacionAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColAplicacionOperationCompleted Is Nothing) Then
                Me.ColAplicacionOperationCompleted = AddressOf Me.OnColAplicacionOperationCompleted
            End If
            Me.InvokeAsync("ColAplicacion", New Object() {ptTicket, pRespuesta}, Me.ColAplicacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnColAplicacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColAplicacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColAplicacionCompleted(Me, New ColAplicacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColEstacionTrabajo", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColEstacionTrabajo(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColEstacionTrabajo", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColEstacionTrabajoAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ColEstacionTrabajoAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColEstacionTrabajoAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColEstacionTrabajoOperationCompleted Is Nothing) Then
                Me.ColEstacionTrabajoOperationCompleted = AddressOf Me.OnColEstacionTrabajoOperationCompleted
            End If
            Me.InvokeAsync("ColEstacionTrabajo", New Object() {ptTicket, pRespuesta}, Me.ColEstacionTrabajoOperationCompleted, userState)
        End Sub
        
        Private Sub OnColEstacionTrabajoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColEstacionTrabajoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColEstacionTrabajoCompleted(Me, New ColEstacionTrabajoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColVersionAplicacion", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColVersionAplicacion(ByRef ptTicket As IDTicket, ByVal plngAplicacionID As Integer, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColVersionAplicacion", New Object() {ptTicket, plngAplicacionID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColVersionAplicacionAsync(ByVal ptTicket As IDTicket, ByVal plngAplicacionID As Integer, ByVal pRespuesta As Respuesta)
            Me.ColVersionAplicacionAsync(ptTicket, plngAplicacionID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColVersionAplicacionAsync(ByVal ptTicket As IDTicket, ByVal plngAplicacionID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColVersionAplicacionOperationCompleted Is Nothing) Then
                Me.ColVersionAplicacionOperationCompleted = AddressOf Me.OnColVersionAplicacionOperationCompleted
            End If
            Me.InvokeAsync("ColVersionAplicacion", New Object() {ptTicket, plngAplicacionID, pRespuesta}, Me.ColVersionAplicacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnColVersionAplicacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColVersionAplicacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColVersionAplicacionCompleted(Me, New ColVersionAplicacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColPermisosVersionAplicacion", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColPermisosVersionAplicacion(ByRef ptTicket As IDTicket, ByVal plngVersionAplicacionID As Integer, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColPermisosVersionAplicacion", New Object() {ptTicket, plngVersionAplicacionID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColPermisosVersionAplicacionAsync(ByVal ptTicket As IDTicket, ByVal plngVersionAplicacionID As Integer, ByVal pRespuesta As Respuesta)
            Me.ColPermisosVersionAplicacionAsync(ptTicket, plngVersionAplicacionID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColPermisosVersionAplicacionAsync(ByVal ptTicket As IDTicket, ByVal plngVersionAplicacionID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColPermisosVersionAplicacionOperationCompleted Is Nothing) Then
                Me.ColPermisosVersionAplicacionOperationCompleted = AddressOf Me.OnColPermisosVersionAplicacionOperationCompleted
            End If
            Me.InvokeAsync("ColPermisosVersionAplicacion", New Object() {ptTicket, plngVersionAplicacionID, pRespuesta}, Me.ColPermisosVersionAplicacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnColPermisosVersionAplicacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColPermisosVersionAplicacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColPermisosVersionAplicacionCompleted(Me, New ColPermisosVersionAplicacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColAplicacionVersionPermiso", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColAplicacionVersionPermiso(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColAplicacionVersionPermiso", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColAplicacionVersionPermisoAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ColAplicacionVersionPermisoAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColAplicacionVersionPermisoAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColAplicacionVersionPermisoOperationCompleted Is Nothing) Then
                Me.ColAplicacionVersionPermisoOperationCompleted = AddressOf Me.OnColAplicacionVersionPermisoOperationCompleted
            End If
            Me.InvokeAsync("ColAplicacionVersionPermiso", New Object() {ptTicket, pRespuesta}, Me.ColAplicacionVersionPermisoOperationCompleted, userState)
        End Sub
        
        Private Sub OnColAplicacionVersionPermisoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColAplicacionVersionPermisoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColAplicacionVersionPermisoCompleted(Me, New ColAplicacionVersionPermisoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColModulosVersionAplicacion", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColModulosVersionAplicacion(ByRef ptTicket As IDTicket, ByVal plngVersionAplicacionID As Integer, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColModulosVersionAplicacion", New Object() {ptTicket, plngVersionAplicacionID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColModulosVersionAplicacionAsync(ByVal ptTicket As IDTicket, ByVal plngVersionAplicacionID As Integer, ByVal pRespuesta As Respuesta)
            Me.ColModulosVersionAplicacionAsync(ptTicket, plngVersionAplicacionID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColModulosVersionAplicacionAsync(ByVal ptTicket As IDTicket, ByVal plngVersionAplicacionID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColModulosVersionAplicacionOperationCompleted Is Nothing) Then
                Me.ColModulosVersionAplicacionOperationCompleted = AddressOf Me.OnColModulosVersionAplicacionOperationCompleted
            End If
            Me.InvokeAsync("ColModulosVersionAplicacion", New Object() {ptTicket, plngVersionAplicacionID, pRespuesta}, Me.ColModulosVersionAplicacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnColModulosVersionAplicacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColModulosVersionAplicacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColModulosVersionAplicacionCompleted(Me, New ColModulosVersionAplicacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColModulosReqVersionAplicacion", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColModulosReqVersionAplicacion(ByRef ptTicket As IDTicket, ByVal plngVersionAplicacionID As Integer, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColModulosReqVersionAplicacion", New Object() {ptTicket, plngVersionAplicacionID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColModulosReqVersionAplicacionAsync(ByVal ptTicket As IDTicket, ByVal plngVersionAplicacionID As Integer, ByVal pRespuesta As Respuesta)
            Me.ColModulosReqVersionAplicacionAsync(ptTicket, plngVersionAplicacionID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColModulosReqVersionAplicacionAsync(ByVal ptTicket As IDTicket, ByVal plngVersionAplicacionID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColModulosReqVersionAplicacionOperationCompleted Is Nothing) Then
                Me.ColModulosReqVersionAplicacionOperationCompleted = AddressOf Me.OnColModulosReqVersionAplicacionOperationCompleted
            End If
            Me.InvokeAsync("ColModulosReqVersionAplicacion", New Object() {ptTicket, plngVersionAplicacionID, pRespuesta}, Me.ColModulosReqVersionAplicacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnColModulosReqVersionAplicacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColModulosReqVersionAplicacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColModulosReqVersionAplicacionCompleted(Me, New ColModulosReqVersionAplicacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColRequerimientosModulo", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColRequerimientosModulo(ByRef ptTicket As IDTicket, ByVal pnVersionAplicacionID As Integer, ByVal pstrNbModulo As String, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColRequerimientosModulo", New Object() {ptTicket, pnVersionAplicacionID, pstrNbModulo, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColRequerimientosModuloAsync(ByVal ptTicket As IDTicket, ByVal pnVersionAplicacionID As Integer, ByVal pstrNbModulo As String, ByVal pRespuesta As Respuesta)
            Me.ColRequerimientosModuloAsync(ptTicket, pnVersionAplicacionID, pstrNbModulo, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColRequerimientosModuloAsync(ByVal ptTicket As IDTicket, ByVal pnVersionAplicacionID As Integer, ByVal pstrNbModulo As String, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColRequerimientosModuloOperationCompleted Is Nothing) Then
                Me.ColRequerimientosModuloOperationCompleted = AddressOf Me.OnColRequerimientosModuloOperationCompleted
            End If
            Me.InvokeAsync("ColRequerimientosModulo", New Object() {ptTicket, pnVersionAplicacionID, pstrNbModulo, pRespuesta}, Me.ColRequerimientosModuloOperationCompleted, userState)
        End Sub
        
        Private Sub OnColRequerimientosModuloOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColRequerimientosModuloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColRequerimientosModuloCompleted(Me, New ColRequerimientosModuloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColRequerimientosXModuloID", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColRequerimientosXModuloID(ByRef ptTicket As IDTicket, ByVal pnModuloID As Integer, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColRequerimientosXModuloID", New Object() {ptTicket, pnModuloID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColRequerimientosXModuloIDAsync(ByVal ptTicket As IDTicket, ByVal pnModuloID As Integer, ByVal pRespuesta As Respuesta)
            Me.ColRequerimientosXModuloIDAsync(ptTicket, pnModuloID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColRequerimientosXModuloIDAsync(ByVal ptTicket As IDTicket, ByVal pnModuloID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColRequerimientosXModuloIDOperationCompleted Is Nothing) Then
                Me.ColRequerimientosXModuloIDOperationCompleted = AddressOf Me.OnColRequerimientosXModuloIDOperationCompleted
            End If
            Me.InvokeAsync("ColRequerimientosXModuloID", New Object() {ptTicket, pnModuloID, pRespuesta}, Me.ColRequerimientosXModuloIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnColRequerimientosXModuloIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColRequerimientosXModuloIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColRequerimientosXModuloIDCompleted(Me, New ColRequerimientosXModuloIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_EstacionTrabajo", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_EstacionTrabajo(ByRef ptTicket As IDTicket, ByRef pEstacionTrabajo As EstacionTrabajo, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta) As Integer
            Dim results() As Object = Me.Invoke("ABC_EstacionTrabajo", New Object() {ptTicket, pEstacionTrabajo, poperABC, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pEstacionTrabajo = CType(results(2),EstacionTrabajo)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_EstacionTrabajoAsync(ByVal ptTicket As IDTicket, ByVal pEstacionTrabajo As EstacionTrabajo, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta)
            Me.ABC_EstacionTrabajoAsync(ptTicket, pEstacionTrabajo, poperABC, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_EstacionTrabajoAsync(ByVal ptTicket As IDTicket, ByVal pEstacionTrabajo As EstacionTrabajo, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ABC_EstacionTrabajoOperationCompleted Is Nothing) Then
                Me.ABC_EstacionTrabajoOperationCompleted = AddressOf Me.OnABC_EstacionTrabajoOperationCompleted
            End If
            Me.InvokeAsync("ABC_EstacionTrabajo", New Object() {ptTicket, pEstacionTrabajo, poperABC, pRespuesta}, Me.ABC_EstacionTrabajoOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_EstacionTrabajoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_EstacionTrabajoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_EstacionTrabajoCompleted(Me, New ABC_EstacionTrabajoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_Aplicacion", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_Aplicacion(ByRef ptTicket As IDTicket, ByRef pAplicacion As Aplicacion, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta) As Integer
            Dim results() As Object = Me.Invoke("ABC_Aplicacion", New Object() {ptTicket, pAplicacion, poperABC, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pAplicacion = CType(results(2),Aplicacion)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_AplicacionAsync(ByVal ptTicket As IDTicket, ByVal pAplicacion As Aplicacion, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta)
            Me.ABC_AplicacionAsync(ptTicket, pAplicacion, poperABC, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_AplicacionAsync(ByVal ptTicket As IDTicket, ByVal pAplicacion As Aplicacion, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ABC_AplicacionOperationCompleted Is Nothing) Then
                Me.ABC_AplicacionOperationCompleted = AddressOf Me.OnABC_AplicacionOperationCompleted
            End If
            Me.InvokeAsync("ABC_Aplicacion", New Object() {ptTicket, pAplicacion, poperABC, pRespuesta}, Me.ABC_AplicacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_AplicacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_AplicacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_AplicacionCompleted(Me, New ABC_AplicacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_VersionAplicacion", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_VersionAplicacion(ByRef ptTicket As IDTicket, ByRef pVersionAplicacion As VersionAplicacion, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta) As Integer
            Dim results() As Object = Me.Invoke("ABC_VersionAplicacion", New Object() {ptTicket, pVersionAplicacion, poperABC, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pVersionAplicacion = CType(results(2),VersionAplicacion)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_VersionAplicacionAsync(ByVal ptTicket As IDTicket, ByVal pVersionAplicacion As VersionAplicacion, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta)
            Me.ABC_VersionAplicacionAsync(ptTicket, pVersionAplicacion, poperABC, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_VersionAplicacionAsync(ByVal ptTicket As IDTicket, ByVal pVersionAplicacion As VersionAplicacion, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ABC_VersionAplicacionOperationCompleted Is Nothing) Then
                Me.ABC_VersionAplicacionOperationCompleted = AddressOf Me.OnABC_VersionAplicacionOperationCompleted
            End If
            Me.InvokeAsync("ABC_VersionAplicacion", New Object() {ptTicket, pVersionAplicacion, poperABC, pRespuesta}, Me.ABC_VersionAplicacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_VersionAplicacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_VersionAplicacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_VersionAplicacionCompleted(Me, New ABC_VersionAplicacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_Permiso", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_Permiso(ByRef ptTicket As IDTicket, ByRef pPermiso As Permiso, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta) As Integer
            Dim results() As Object = Me.Invoke("ABC_Permiso", New Object() {ptTicket, pPermiso, poperABC, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pPermiso = CType(results(2),Permiso)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_PermisoAsync(ByVal ptTicket As IDTicket, ByVal pPermiso As Permiso, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta)
            Me.ABC_PermisoAsync(ptTicket, pPermiso, poperABC, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_PermisoAsync(ByVal ptTicket As IDTicket, ByVal pPermiso As Permiso, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ABC_PermisoOperationCompleted Is Nothing) Then
                Me.ABC_PermisoOperationCompleted = AddressOf Me.OnABC_PermisoOperationCompleted
            End If
            Me.InvokeAsync("ABC_Permiso", New Object() {ptTicket, pPermiso, poperABC, pRespuesta}, Me.ABC_PermisoOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_PermisoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_PermisoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_PermisoCompleted(Me, New ABC_PermisoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_Modulo", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_Modulo(ByRef ptTicket As IDTicket, ByRef pModulo As Modulo, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta) As Integer
            Dim results() As Object = Me.Invoke("ABC_Modulo", New Object() {ptTicket, pModulo, poperABC, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pModulo = CType(results(2),Modulo)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_ModuloAsync(ByVal ptTicket As IDTicket, ByVal pModulo As Modulo, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta)
            Me.ABC_ModuloAsync(ptTicket, pModulo, poperABC, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_ModuloAsync(ByVal ptTicket As IDTicket, ByVal pModulo As Modulo, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ABC_ModuloOperationCompleted Is Nothing) Then
                Me.ABC_ModuloOperationCompleted = AddressOf Me.OnABC_ModuloOperationCompleted
            End If
            Me.InvokeAsync("ABC_Modulo", New Object() {ptTicket, pModulo, poperABC, pRespuesta}, Me.ABC_ModuloOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_ModuloOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_ModuloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_ModuloCompleted(Me, New ABC_ModuloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_Requerimiento", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_Requerimiento(ByRef ptTicket As IDTicket, ByRef pRequerimiento As Requerimiento, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta) As Integer
            Dim results() As Object = Me.Invoke("ABC_Requerimiento", New Object() {ptTicket, pRequerimiento, poperABC, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRequerimiento = CType(results(2),Requerimiento)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_RequerimientoAsync(ByVal ptTicket As IDTicket, ByVal pRequerimiento As Requerimiento, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta)
            Me.ABC_RequerimientoAsync(ptTicket, pRequerimiento, poperABC, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_RequerimientoAsync(ByVal ptTicket As IDTicket, ByVal pRequerimiento As Requerimiento, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ABC_RequerimientoOperationCompleted Is Nothing) Then
                Me.ABC_RequerimientoOperationCompleted = AddressOf Me.OnABC_RequerimientoOperationCompleted
            End If
            Me.InvokeAsync("ABC_Requerimiento", New Object() {ptTicket, pRequerimiento, poperABC, pRespuesta}, Me.ABC_RequerimientoOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_RequerimientoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_RequerimientoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_RequerimientoCompleted(Me, New ABC_RequerimientoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_ReqModulo", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_ReqModulo(ByRef ptTicket As IDTicket, ByRef pReqModulo As ReqModulo, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta) As Integer
            Dim results() As Object = Me.Invoke("ABC_ReqModulo", New Object() {ptTicket, pReqModulo, poperABC, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pReqModulo = CType(results(2),ReqModulo)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_ReqModuloAsync(ByVal ptTicket As IDTicket, ByVal pReqModulo As ReqModulo, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta)
            Me.ABC_ReqModuloAsync(ptTicket, pReqModulo, poperABC, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_ReqModuloAsync(ByVal ptTicket As IDTicket, ByVal pReqModulo As ReqModulo, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ABC_ReqModuloOperationCompleted Is Nothing) Then
                Me.ABC_ReqModuloOperationCompleted = AddressOf Me.OnABC_ReqModuloOperationCompleted
            End If
            Me.InvokeAsync("ABC_ReqModulo", New Object() {ptTicket, pReqModulo, poperABC, pRespuesta}, Me.ABC_ReqModuloOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_ReqModuloOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_ReqModuloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_ReqModuloCompleted(Me, New ABC_ReqModuloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/CargaCliente", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaCliente(ByRef ptTicket As IDTicket, ByVal pnClienteID As Integer, ByRef pRespuesta As Respuesta) As Cliente
            Dim results() As Object = Me.Invoke("CargaCliente", New Object() {ptTicket, pnClienteID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),Cliente)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaClienteAsync(ByVal ptTicket As IDTicket, ByVal pnClienteID As Integer, ByVal pRespuesta As Respuesta)
            Me.CargaClienteAsync(ptTicket, pnClienteID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaClienteAsync(ByVal ptTicket As IDTicket, ByVal pnClienteID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.CargaClienteOperationCompleted Is Nothing) Then
                Me.CargaClienteOperationCompleted = AddressOf Me.OnCargaClienteOperationCompleted
            End If
            Me.InvokeAsync("CargaCliente", New Object() {ptTicket, pnClienteID, pRespuesta}, Me.CargaClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaClienteCompleted(Me, New CargaClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_Cliente", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_Cliente(ByRef ptTicket As IDTicket, ByRef pCliente As Cliente, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta) As Integer
            Dim results() As Object = Me.Invoke("ABC_Cliente", New Object() {ptTicket, pCliente, poperABC, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pCliente = CType(results(2),Cliente)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_ClienteAsync(ByVal ptTicket As IDTicket, ByVal pCliente As Cliente, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta)
            Me.ABC_ClienteAsync(ptTicket, pCliente, poperABC, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_ClienteAsync(ByVal ptTicket As IDTicket, ByVal pCliente As Cliente, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ABC_ClienteOperationCompleted Is Nothing) Then
                Me.ABC_ClienteOperationCompleted = AddressOf Me.OnABC_ClienteOperationCompleted
            End If
            Me.InvokeAsync("ABC_Cliente", New Object() {ptTicket, pCliente, poperABC, pRespuesta}, Me.ABC_ClienteOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_ClienteOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_ClienteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_ClienteCompleted(Me, New ABC_ClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColProyectos", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColProyectos(ByVal pnClienteID As Integer, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColProyectos", New Object() {pnClienteID, pRespuesta})
            pRespuesta = CType(results(1),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColProyectosAsync(ByVal pnClienteID As Integer, ByVal pRespuesta As Respuesta)
            Me.ColProyectosAsync(pnClienteID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColProyectosAsync(ByVal pnClienteID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColProyectosOperationCompleted Is Nothing) Then
                Me.ColProyectosOperationCompleted = AddressOf Me.OnColProyectosOperationCompleted
            End If
            Me.InvokeAsync("ColProyectos", New Object() {pnClienteID, pRespuesta}, Me.ColProyectosOperationCompleted, userState)
        End Sub
        
        Private Sub OnColProyectosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColProyectosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColProyectosCompleted(Me, New ColProyectosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColClientes", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColClientes(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColClientes", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColClientesAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ColClientesAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColClientesAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColClientesOperationCompleted Is Nothing) Then
                Me.ColClientesOperationCompleted = AddressOf Me.OnColClientesOperationCompleted
            End If
            Me.InvokeAsync("ColClientes", New Object() {ptTicket, pRespuesta}, Me.ColClientesOperationCompleted, userState)
        End Sub
        
        Private Sub OnColClientesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColClientesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColClientesCompleted(Me, New ColClientesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColClientesProyectos", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColClientesProyectos(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColClientesProyectos", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColClientesProyectosAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ColClientesProyectosAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColClientesProyectosAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColClientesProyectosOperationCompleted Is Nothing) Then
                Me.ColClientesProyectosOperationCompleted = AddressOf Me.OnColClientesProyectosOperationCompleted
            End If
            Me.InvokeAsync("ColClientesProyectos", New Object() {ptTicket, pRespuesta}, Me.ColClientesProyectosOperationCompleted, userState)
        End Sub
        
        Private Sub OnColClientesProyectosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColClientesProyectosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColClientesProyectosCompleted(Me, New ColClientesProyectosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColProyectosUsuario", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColProyectosUsuario(ByRef ptTicket As IDTicket, ByVal pstrUsrID As String, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColProyectosUsuario", New Object() {ptTicket, pstrUsrID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColProyectosUsuarioAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pRespuesta As Respuesta)
            Me.ColProyectosUsuarioAsync(ptTicket, pstrUsrID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColProyectosUsuarioAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColProyectosUsuarioOperationCompleted Is Nothing) Then
                Me.ColProyectosUsuarioOperationCompleted = AddressOf Me.OnColProyectosUsuarioOperationCompleted
            End If
            Me.InvokeAsync("ColProyectosUsuario", New Object() {ptTicket, pstrUsrID, pRespuesta}, Me.ColProyectosUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnColProyectosUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColProyectosUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColProyectosUsuarioCompleted(Me, New ColProyectosUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/CargaProyecto", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaProyecto(ByRef ptTicket As IDTicket, ByVal pnProyectoID As Integer, ByRef pRespuesta As Respuesta) As Proyecto
            Dim results() As Object = Me.Invoke("CargaProyecto", New Object() {ptTicket, pnProyectoID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),Proyecto)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaProyectoAsync(ByVal ptTicket As IDTicket, ByVal pnProyectoID As Integer, ByVal pRespuesta As Respuesta)
            Me.CargaProyectoAsync(ptTicket, pnProyectoID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaProyectoAsync(ByVal ptTicket As IDTicket, ByVal pnProyectoID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.CargaProyectoOperationCompleted Is Nothing) Then
                Me.CargaProyectoOperationCompleted = AddressOf Me.OnCargaProyectoOperationCompleted
            End If
            Me.InvokeAsync("CargaProyecto", New Object() {ptTicket, pnProyectoID, pRespuesta}, Me.CargaProyectoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaProyectoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaProyectoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaProyectoCompleted(Me, New CargaProyectoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_Proyecto", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_Proyecto(ByRef ptTicket As IDTicket, ByRef pProyecto As Proyecto, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta) As Integer
            Dim results() As Object = Me.Invoke("ABC_Proyecto", New Object() {ptTicket, pProyecto, poperABC, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pProyecto = CType(results(2),Proyecto)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_ProyectoAsync(ByVal ptTicket As IDTicket, ByVal pProyecto As Proyecto, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta)
            Me.ABC_ProyectoAsync(ptTicket, pProyecto, poperABC, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_ProyectoAsync(ByVal ptTicket As IDTicket, ByVal pProyecto As Proyecto, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ABC_ProyectoOperationCompleted Is Nothing) Then
                Me.ABC_ProyectoOperationCompleted = AddressOf Me.OnABC_ProyectoOperationCompleted
            End If
            Me.InvokeAsync("ABC_Proyecto", New Object() {ptTicket, pProyecto, poperABC, pRespuesta}, Me.ABC_ProyectoOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_ProyectoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_ProyectoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_ProyectoCompleted(Me, New ABC_ProyectoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColPermisosUsuarioProyecto", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColPermisosUsuarioProyecto(ByRef ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pnVersionAplicacionID As Integer, ByVal pnProyectoID As Integer, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColPermisosUsuarioProyecto", New Object() {ptTicket, pstrUsrID, pnVersionAplicacionID, pnProyectoID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColPermisosUsuarioProyectoAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pnVersionAplicacionID As Integer, ByVal pnProyectoID As Integer, ByVal pRespuesta As Respuesta)
            Me.ColPermisosUsuarioProyectoAsync(ptTicket, pstrUsrID, pnVersionAplicacionID, pnProyectoID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColPermisosUsuarioProyectoAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pnVersionAplicacionID As Integer, ByVal pnProyectoID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColPermisosUsuarioProyectoOperationCompleted Is Nothing) Then
                Me.ColPermisosUsuarioProyectoOperationCompleted = AddressOf Me.OnColPermisosUsuarioProyectoOperationCompleted
            End If
            Me.InvokeAsync("ColPermisosUsuarioProyecto", New Object() {ptTicket, pstrUsrID, pnVersionAplicacionID, pnProyectoID, pRespuesta}, Me.ColPermisosUsuarioProyectoOperationCompleted, userState)
        End Sub
        
        Private Sub OnColPermisosUsuarioProyectoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColPermisosUsuarioProyectoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColPermisosUsuarioProyectoCompleted(Me, New ColPermisosUsuarioProyectoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColPermisosUsuarioProyectoSinTicket", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColPermisosUsuarioProyectoSinTicket(ByVal pstrUsrID As String, ByVal pnVersionAplicacionID As Integer, ByVal pnProyectoID As Integer, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColPermisosUsuarioProyectoSinTicket", New Object() {pstrUsrID, pnVersionAplicacionID, pnProyectoID, pRespuesta})
            pRespuesta = CType(results(1),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColPermisosUsuarioProyectoSinTicketAsync(ByVal pstrUsrID As String, ByVal pnVersionAplicacionID As Integer, ByVal pnProyectoID As Integer, ByVal pRespuesta As Respuesta)
            Me.ColPermisosUsuarioProyectoSinTicketAsync(pstrUsrID, pnVersionAplicacionID, pnProyectoID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColPermisosUsuarioProyectoSinTicketAsync(ByVal pstrUsrID As String, ByVal pnVersionAplicacionID As Integer, ByVal pnProyectoID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColPermisosUsuarioProyectoSinTicketOperationCompleted Is Nothing) Then
                Me.ColPermisosUsuarioProyectoSinTicketOperationCompleted = AddressOf Me.OnColPermisosUsuarioProyectoSinTicketOperationCompleted
            End If
            Me.InvokeAsync("ColPermisosUsuarioProyectoSinTicket", New Object() {pstrUsrID, pnVersionAplicacionID, pnProyectoID, pRespuesta}, Me.ColPermisosUsuarioProyectoSinTicketOperationCompleted, userState)
        End Sub
        
        Private Sub OnColPermisosUsuarioProyectoSinTicketOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColPermisosUsuarioProyectoSinTicketCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColPermisosUsuarioProyectoSinTicketCompleted(Me, New ColPermisosUsuarioProyectoSinTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColPermisosUsuario", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColPermisosUsuario(ByRef ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pnVersionAplicacionID As Integer, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColPermisosUsuario", New Object() {ptTicket, pstrUsrID, pnVersionAplicacionID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColPermisosUsuarioAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pnVersionAplicacionID As Integer, ByVal pRespuesta As Respuesta)
            Me.ColPermisosUsuarioAsync(ptTicket, pstrUsrID, pnVersionAplicacionID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColPermisosUsuarioAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pnVersionAplicacionID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColPermisosUsuarioOperationCompleted Is Nothing) Then
                Me.ColPermisosUsuarioOperationCompleted = AddressOf Me.OnColPermisosUsuarioOperationCompleted
            End If
            Me.InvokeAsync("ColPermisosUsuario", New Object() {ptTicket, pstrUsrID, pnVersionAplicacionID, pRespuesta}, Me.ColPermisosUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnColPermisosUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColPermisosUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColPermisosUsuarioCompleted(Me, New ColPermisosUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColHistAcceso", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColHistAcceso(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta, ByVal panVersionAplicacionID() As Integer, ByVal pstrUsrIDMask As String, ByVal pastrUsrID() As String, ByVal panPermisoAplicacionID() As String, ByVal pblnEsLogin As Boolean, ByVal pdtFechaHoraInicio As Date, ByVal pdtFechaHoraFin As Date, ByVal pstrIPMask As String, ByVal pastrIP() As String, ByVal panProyectoID() As Integer, ByVal pastrRespuestaID() As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColHistAcceso", New Object() {ptTicket, pRespuesta, panVersionAplicacionID, pstrUsrIDMask, pastrUsrID, panPermisoAplicacionID, pblnEsLogin, pdtFechaHoraInicio, pdtFechaHoraFin, pstrIPMask, pastrIP, panProyectoID, pastrRespuestaID})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColHistAccesoAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal panVersionAplicacionID() As Integer, ByVal pstrUsrIDMask As String, ByVal pastrUsrID() As String, ByVal panPermisoAplicacionID() As String, ByVal pblnEsLogin As Boolean, ByVal pdtFechaHoraInicio As Date, ByVal pdtFechaHoraFin As Date, ByVal pstrIPMask As String, ByVal pastrIP() As String, ByVal panProyectoID() As Integer, ByVal pastrRespuestaID() As String)
            Me.ColHistAccesoAsync(ptTicket, pRespuesta, panVersionAplicacionID, pstrUsrIDMask, pastrUsrID, panPermisoAplicacionID, pblnEsLogin, pdtFechaHoraInicio, pdtFechaHoraFin, pstrIPMask, pastrIP, panProyectoID, pastrRespuestaID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColHistAccesoAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal panVersionAplicacionID() As Integer, ByVal pstrUsrIDMask As String, ByVal pastrUsrID() As String, ByVal panPermisoAplicacionID() As String, ByVal pblnEsLogin As Boolean, ByVal pdtFechaHoraInicio As Date, ByVal pdtFechaHoraFin As Date, ByVal pstrIPMask As String, ByVal pastrIP() As String, ByVal panProyectoID() As Integer, ByVal pastrRespuestaID() As String, ByVal userState As Object)
            If (Me.ColHistAccesoOperationCompleted Is Nothing) Then
                Me.ColHistAccesoOperationCompleted = AddressOf Me.OnColHistAccesoOperationCompleted
            End If
            Me.InvokeAsync("ColHistAcceso", New Object() {ptTicket, pRespuesta, panVersionAplicacionID, pstrUsrIDMask, pastrUsrID, panPermisoAplicacionID, pblnEsLogin, pdtFechaHoraInicio, pdtFechaHoraFin, pstrIPMask, pastrIP, panProyectoID, pastrRespuestaID}, Me.ColHistAccesoOperationCompleted, userState)
        End Sub
        
        Private Sub OnColHistAccesoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColHistAccesoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColHistAccesoCompleted(Me, New ColHistAccesoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ObtenerHistAcceso", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerHistAcceso(ByRef ptTicket As IDTicket, ByVal plngHistAccesoID As Integer, ByRef pRespuesta As Respuesta) As HistAcceso
            Dim results() As Object = Me.Invoke("ObtenerHistAcceso", New Object() {ptTicket, plngHistAccesoID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),HistAcceso)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerHistAccesoAsync(ByVal ptTicket As IDTicket, ByVal plngHistAccesoID As Integer, ByVal pRespuesta As Respuesta)
            Me.ObtenerHistAccesoAsync(ptTicket, plngHistAccesoID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerHistAccesoAsync(ByVal ptTicket As IDTicket, ByVal plngHistAccesoID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ObtenerHistAccesoOperationCompleted Is Nothing) Then
                Me.ObtenerHistAccesoOperationCompleted = AddressOf Me.OnObtenerHistAccesoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerHistAcceso", New Object() {ptTicket, plngHistAccesoID, pRespuesta}, Me.ObtenerHistAccesoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerHistAccesoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerHistAccesoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerHistAccesoCompleted(Me, New ObtenerHistAccesoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/CargaPoliticaSesion", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaPoliticaSesion(ByRef ptTicket As IDTicket, ByVal pnPoliticaSesionID As Integer, ByRef pRespuesta As Respuesta) As PoliticaSesion
            Dim results() As Object = Me.Invoke("CargaPoliticaSesion", New Object() {ptTicket, pnPoliticaSesionID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),PoliticaSesion)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaPoliticaSesionAsync(ByVal ptTicket As IDTicket, ByVal pnPoliticaSesionID As Integer, ByVal pRespuesta As Respuesta)
            Me.CargaPoliticaSesionAsync(ptTicket, pnPoliticaSesionID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaPoliticaSesionAsync(ByVal ptTicket As IDTicket, ByVal pnPoliticaSesionID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.CargaPoliticaSesionOperationCompleted Is Nothing) Then
                Me.CargaPoliticaSesionOperationCompleted = AddressOf Me.OnCargaPoliticaSesionOperationCompleted
            End If
            Me.InvokeAsync("CargaPoliticaSesion", New Object() {ptTicket, pnPoliticaSesionID, pRespuesta}, Me.CargaPoliticaSesionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaPoliticaSesionOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaPoliticaSesionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaPoliticaSesionCompleted(Me, New CargaPoliticaSesionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_PoliticaSesion", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_PoliticaSesion(ByRef ptTicket As IDTicket, ByRef pPoliticaSesion As PoliticaSesion, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta, ByVal sDescripcion As String) As Integer
            Dim results() As Object = Me.Invoke("ABC_PoliticaSesion", New Object() {ptTicket, pPoliticaSesion, poperABC, pRespuesta, sDescripcion})
            ptTicket = CType(results(1),IDTicket)
            pPoliticaSesion = CType(results(2),PoliticaSesion)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_PoliticaSesionAsync(ByVal ptTicket As IDTicket, ByVal pPoliticaSesion As PoliticaSesion, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal sDescripcion As String)
            Me.ABC_PoliticaSesionAsync(ptTicket, pPoliticaSesion, poperABC, pRespuesta, sDescripcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_PoliticaSesionAsync(ByVal ptTicket As IDTicket, ByVal pPoliticaSesion As PoliticaSesion, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal sDescripcion As String, ByVal userState As Object)
            If (Me.ABC_PoliticaSesionOperationCompleted Is Nothing) Then
                Me.ABC_PoliticaSesionOperationCompleted = AddressOf Me.OnABC_PoliticaSesionOperationCompleted
            End If
            Me.InvokeAsync("ABC_PoliticaSesion", New Object() {ptTicket, pPoliticaSesion, poperABC, pRespuesta, sDescripcion}, Me.ABC_PoliticaSesionOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_PoliticaSesionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_PoliticaSesionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_PoliticaSesionCompleted(Me, New ABC_PoliticaSesionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColPoliticasSesion", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColPoliticasSesion(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColPoliticasSesion", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColPoliticasSesionAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ColPoliticasSesionAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColPoliticasSesionAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColPoliticasSesionOperationCompleted Is Nothing) Then
                Me.ColPoliticasSesionOperationCompleted = AddressOf Me.OnColPoliticasSesionOperationCompleted
            End If
            Me.InvokeAsync("ColPoliticasSesion", New Object() {ptTicket, pRespuesta}, Me.ColPoliticasSesionOperationCompleted, userState)
        End Sub
        
        Private Sub OnColPoliticasSesionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColPoliticasSesionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColPoliticasSesionCompleted(Me, New ColPoliticasSesionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/CargaPoliticaPwd", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaPoliticaPwd(ByRef ptTicket As IDTicket, ByVal pnPoliticaPwdID As Integer, ByRef pRespuesta As Respuesta) As PoliticaPwd
            Dim results() As Object = Me.Invoke("CargaPoliticaPwd", New Object() {ptTicket, pnPoliticaPwdID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),PoliticaPwd)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaPoliticaPwdAsync(ByVal ptTicket As IDTicket, ByVal pnPoliticaPwdID As Integer, ByVal pRespuesta As Respuesta)
            Me.CargaPoliticaPwdAsync(ptTicket, pnPoliticaPwdID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaPoliticaPwdAsync(ByVal ptTicket As IDTicket, ByVal pnPoliticaPwdID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.CargaPoliticaPwdOperationCompleted Is Nothing) Then
                Me.CargaPoliticaPwdOperationCompleted = AddressOf Me.OnCargaPoliticaPwdOperationCompleted
            End If
            Me.InvokeAsync("CargaPoliticaPwd", New Object() {ptTicket, pnPoliticaPwdID, pRespuesta}, Me.CargaPoliticaPwdOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaPoliticaPwdOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaPoliticaPwdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaPoliticaPwdCompleted(Me, New CargaPoliticaPwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_PoliticaPwd", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_PoliticaPwd(ByRef ptTicket As IDTicket, ByRef pPoliticaPwd As PoliticaPwd, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta, ByVal pDescripcion As String) As Integer
            Dim results() As Object = Me.Invoke("ABC_PoliticaPwd", New Object() {ptTicket, pPoliticaPwd, poperABC, pRespuesta, pDescripcion})
            ptTicket = CType(results(1),IDTicket)
            pPoliticaPwd = CType(results(2),PoliticaPwd)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_PoliticaPwdAsync(ByVal ptTicket As IDTicket, ByVal pPoliticaPwd As PoliticaPwd, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal pDescripcion As String)
            Me.ABC_PoliticaPwdAsync(ptTicket, pPoliticaPwd, poperABC, pRespuesta, pDescripcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_PoliticaPwdAsync(ByVal ptTicket As IDTicket, ByVal pPoliticaPwd As PoliticaPwd, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal pDescripcion As String, ByVal userState As Object)
            If (Me.ABC_PoliticaPwdOperationCompleted Is Nothing) Then
                Me.ABC_PoliticaPwdOperationCompleted = AddressOf Me.OnABC_PoliticaPwdOperationCompleted
            End If
            Me.InvokeAsync("ABC_PoliticaPwd", New Object() {ptTicket, pPoliticaPwd, poperABC, pRespuesta, pDescripcion}, Me.ABC_PoliticaPwdOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_PoliticaPwdOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_PoliticaPwdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_PoliticaPwdCompleted(Me, New ABC_PoliticaPwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColPoliticasPwd", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColPoliticasPwd(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColPoliticasPwd", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColPoliticasPwdAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ColPoliticasPwdAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColPoliticasPwdAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColPoliticasPwdOperationCompleted Is Nothing) Then
                Me.ColPoliticasPwdOperationCompleted = AddressOf Me.OnColPoliticasPwdOperationCompleted
            End If
            Me.InvokeAsync("ColPoliticasPwd", New Object() {ptTicket, pRespuesta}, Me.ColPoliticasPwdOperationCompleted, userState)
        End Sub
        
        Private Sub OnColPoliticasPwdOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColPoliticasPwdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColPoliticasPwdCompleted(Me, New ColPoliticasPwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/DatosIdentidadUsr", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DatosIdentidadUsr(ByRef ptTicket As IDTicket, ByVal pstrUsrID As String, ByRef pRespuesta As Respuesta) As IdentidadUsr
            Dim results() As Object = Me.Invoke("DatosIdentidadUsr", New Object() {ptTicket, pstrUsrID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),IdentidadUsr)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DatosIdentidadUsrAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pRespuesta As Respuesta)
            Me.DatosIdentidadUsrAsync(ptTicket, pstrUsrID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DatosIdentidadUsrAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.DatosIdentidadUsrOperationCompleted Is Nothing) Then
                Me.DatosIdentidadUsrOperationCompleted = AddressOf Me.OnDatosIdentidadUsrOperationCompleted
            End If
            Me.InvokeAsync("DatosIdentidadUsr", New Object() {ptTicket, pstrUsrID, pRespuesta}, Me.DatosIdentidadUsrOperationCompleted, userState)
        End Sub
        
        Private Sub OnDatosIdentidadUsrOperationCompleted(ByVal arg As Object)
            If (Not (Me.DatosIdentidadUsrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DatosIdentidadUsrCompleted(Me, New DatosIdentidadUsrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColIdentidadUsr", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColIdentidadUsr(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColIdentidadUsr", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColIdentidadUsrAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ColIdentidadUsrAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColIdentidadUsrAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColIdentidadUsrOperationCompleted Is Nothing) Then
                Me.ColIdentidadUsrOperationCompleted = AddressOf Me.OnColIdentidadUsrOperationCompleted
            End If
            Me.InvokeAsync("ColIdentidadUsr", New Object() {ptTicket, pRespuesta}, Me.ColIdentidadUsrOperationCompleted, userState)
        End Sub
        
        Private Sub OnColIdentidadUsrOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColIdentidadUsrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColIdentidadUsrCompleted(Me, New ColIdentidadUsrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColIdentidadUsrResp", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColIdentidadUsrResp(ByRef ptTicket As IDTicket, ByVal pstrUsrID As String, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColIdentidadUsrResp", New Object() {ptTicket, pstrUsrID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColIdentidadUsrRespAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pRespuesta As Respuesta)
            Me.ColIdentidadUsrRespAsync(ptTicket, pstrUsrID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColIdentidadUsrRespAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColIdentidadUsrRespOperationCompleted Is Nothing) Then
                Me.ColIdentidadUsrRespOperationCompleted = AddressOf Me.OnColIdentidadUsrRespOperationCompleted
            End If
            Me.InvokeAsync("ColIdentidadUsrResp", New Object() {ptTicket, pstrUsrID, pRespuesta}, Me.ColIdentidadUsrRespOperationCompleted, userState)
        End Sub
        
        Private Sub OnColIdentidadUsrRespOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColIdentidadUsrRespCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColIdentidadUsrRespCompleted(Me, New ColIdentidadUsrRespCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColUsuarios", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColUsuarios(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColUsuarios", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColUsuariosAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ColUsuariosAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColUsuariosAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColUsuariosOperationCompleted Is Nothing) Then
                Me.ColUsuariosOperationCompleted = AddressOf Me.OnColUsuariosOperationCompleted
            End If
            Me.InvokeAsync("ColUsuarios", New Object() {ptTicket, pRespuesta}, Me.ColUsuariosOperationCompleted, userState)
        End Sub
        
        Private Sub OnColUsuariosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColUsuariosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColUsuariosCompleted(Me, New ColUsuariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColPerfilesUsr", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColPerfilesUsr(ByRef ptTicket As IDTicket, ByVal pstrUsrID As String, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColPerfilesUsr", New Object() {ptTicket, pstrUsrID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColPerfilesUsrAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pRespuesta As Respuesta)
            Me.ColPerfilesUsrAsync(ptTicket, pstrUsrID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColPerfilesUsrAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColPerfilesUsrOperationCompleted Is Nothing) Then
                Me.ColPerfilesUsrOperationCompleted = AddressOf Me.OnColPerfilesUsrOperationCompleted
            End If
            Me.InvokeAsync("ColPerfilesUsr", New Object() {ptTicket, pstrUsrID, pRespuesta}, Me.ColPerfilesUsrOperationCompleted, userState)
        End Sub
        
        Private Sub OnColPerfilesUsrOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColPerfilesUsrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColPerfilesUsrCompleted(Me, New ColPerfilesUsrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColPerfilesUsrPropio", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColPerfilesUsrPropio(ByRef ptTicket As IDTicket, ByVal pstrUsrID As String, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColPerfilesUsrPropio", New Object() {ptTicket, pstrUsrID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColPerfilesUsrPropioAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pRespuesta As Respuesta)
            Me.ColPerfilesUsrPropioAsync(ptTicket, pstrUsrID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColPerfilesUsrPropioAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColPerfilesUsrPropioOperationCompleted Is Nothing) Then
                Me.ColPerfilesUsrPropioOperationCompleted = AddressOf Me.OnColPerfilesUsrPropioOperationCompleted
            End If
            Me.InvokeAsync("ColPerfilesUsrPropio", New Object() {ptTicket, pstrUsrID, pRespuesta}, Me.ColPerfilesUsrPropioOperationCompleted, userState)
        End Sub
        
        Private Sub OnColPerfilesUsrPropioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColPerfilesUsrPropioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColPerfilesUsrPropioCompleted(Me, New ColPerfilesUsrPropioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColUsuariosAdministrar", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColUsuariosAdministrar(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColUsuariosAdministrar", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColUsuariosAdministrarAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ColUsuariosAdministrarAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColUsuariosAdministrarAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColUsuariosAdministrarOperationCompleted Is Nothing) Then
                Me.ColUsuariosAdministrarOperationCompleted = AddressOf Me.OnColUsuariosAdministrarOperationCompleted
            End If
            Me.InvokeAsync("ColUsuariosAdministrar", New Object() {ptTicket, pRespuesta}, Me.ColUsuariosAdministrarOperationCompleted, userState)
        End Sub
        
        Private Sub OnColUsuariosAdministrarOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColUsuariosAdministrarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColUsuariosAdministrarCompleted(Me, New ColUsuariosAdministrarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColUsuariosAdministrartodo", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColUsuariosAdministrartodo(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColUsuariosAdministrartodo", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColUsuariosAdministrartodoAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ColUsuariosAdministrartodoAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColUsuariosAdministrartodoAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColUsuariosAdministrartodoOperationCompleted Is Nothing) Then
                Me.ColUsuariosAdministrartodoOperationCompleted = AddressOf Me.OnColUsuariosAdministrartodoOperationCompleted
            End If
            Me.InvokeAsync("ColUsuariosAdministrartodo", New Object() {ptTicket, pRespuesta}, Me.ColUsuariosAdministrartodoOperationCompleted, userState)
        End Sub
        
        Private Sub OnColUsuariosAdministrartodoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColUsuariosAdministrartodoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColUsuariosAdministrartodoCompleted(Me, New ColUsuariosAdministrartodoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_IdentidadUsr", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_IdentidadUsr(ByRef ptTicket As IDTicket, ByRef pIdentidadUsr As IdentidadUsr, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta, ByVal sDescripcion As String) As Integer
            Dim results() As Object = Me.Invoke("ABC_IdentidadUsr", New Object() {ptTicket, pIdentidadUsr, poperABC, pRespuesta, sDescripcion})
            ptTicket = CType(results(1),IDTicket)
            pIdentidadUsr = CType(results(2),IdentidadUsr)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_IdentidadUsrAsync(ByVal ptTicket As IDTicket, ByVal pIdentidadUsr As IdentidadUsr, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal sDescripcion As String)
            Me.ABC_IdentidadUsrAsync(ptTicket, pIdentidadUsr, poperABC, pRespuesta, sDescripcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_IdentidadUsrAsync(ByVal ptTicket As IDTicket, ByVal pIdentidadUsr As IdentidadUsr, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal sDescripcion As String, ByVal userState As Object)
            If (Me.ABC_IdentidadUsrOperationCompleted Is Nothing) Then
                Me.ABC_IdentidadUsrOperationCompleted = AddressOf Me.OnABC_IdentidadUsrOperationCompleted
            End If
            Me.InvokeAsync("ABC_IdentidadUsr", New Object() {ptTicket, pIdentidadUsr, poperABC, pRespuesta, sDescripcion}, Me.ABC_IdentidadUsrOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_IdentidadUsrOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_IdentidadUsrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_IdentidadUsrCompleted(Me, New ABC_IdentidadUsrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColGrupoAdmin", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColGrupoAdmin(ByRef ptTicket As IDTicket, ByRef aGupoAdminID As Integer, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColGrupoAdmin", New Object() {ptTicket, aGupoAdminID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            aGupoAdminID = CType(results(2),Integer)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColGrupoAdminAsync(ByVal ptTicket As IDTicket, ByVal aGupoAdminID As Integer, ByVal pRespuesta As Respuesta)
            Me.ColGrupoAdminAsync(ptTicket, aGupoAdminID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColGrupoAdminAsync(ByVal ptTicket As IDTicket, ByVal aGupoAdminID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColGrupoAdminOperationCompleted Is Nothing) Then
                Me.ColGrupoAdminOperationCompleted = AddressOf Me.OnColGrupoAdminOperationCompleted
            End If
            Me.InvokeAsync("ColGrupoAdmin", New Object() {ptTicket, aGupoAdminID, pRespuesta}, Me.ColGrupoAdminOperationCompleted, userState)
        End Sub
        
        Private Sub OnColGrupoAdminOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColGrupoAdminCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColGrupoAdminCompleted(Me, New ColGrupoAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColGrupoAdminHijos", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColGrupoAdminHijos(ByRef ptTicket As IDTicket, ByRef aGupoAdminID As Integer, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColGrupoAdminHijos", New Object() {ptTicket, aGupoAdminID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            aGupoAdminID = CType(results(2),Integer)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColGrupoAdminHijosAsync(ByVal ptTicket As IDTicket, ByVal aGupoAdminID As Integer, ByVal pRespuesta As Respuesta)
            Me.ColGrupoAdminHijosAsync(ptTicket, aGupoAdminID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColGrupoAdminHijosAsync(ByVal ptTicket As IDTicket, ByVal aGupoAdminID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColGrupoAdminHijosOperationCompleted Is Nothing) Then
                Me.ColGrupoAdminHijosOperationCompleted = AddressOf Me.OnColGrupoAdminHijosOperationCompleted
            End If
            Me.InvokeAsync("ColGrupoAdminHijos", New Object() {ptTicket, aGupoAdminID, pRespuesta}, Me.ColGrupoAdminHijosOperationCompleted, userState)
        End Sub
        
        Private Sub OnColGrupoAdminHijosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColGrupoAdminHijosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColGrupoAdminHijosCompleted(Me, New ColGrupoAdminHijosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_GrupoAdmin", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_GrupoAdmin(ByRef ptTicket As IDTicket, ByRef pGrupoAdmin As GrupoAdmin, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta, ByVal sDescripcion As String) As Integer
            Dim results() As Object = Me.Invoke("ABC_GrupoAdmin", New Object() {ptTicket, pGrupoAdmin, poperABC, pRespuesta, sDescripcion})
            ptTicket = CType(results(1),IDTicket)
            pGrupoAdmin = CType(results(2),GrupoAdmin)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_GrupoAdminAsync(ByVal ptTicket As IDTicket, ByVal pGrupoAdmin As GrupoAdmin, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal sDescripcion As String)
            Me.ABC_GrupoAdminAsync(ptTicket, pGrupoAdmin, poperABC, pRespuesta, sDescripcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_GrupoAdminAsync(ByVal ptTicket As IDTicket, ByVal pGrupoAdmin As GrupoAdmin, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal sDescripcion As String, ByVal userState As Object)
            If (Me.ABC_GrupoAdminOperationCompleted Is Nothing) Then
                Me.ABC_GrupoAdminOperationCompleted = AddressOf Me.OnABC_GrupoAdminOperationCompleted
            End If
            Me.InvokeAsync("ABC_GrupoAdmin", New Object() {ptTicket, pGrupoAdmin, poperABC, pRespuesta, sDescripcion}, Me.ABC_GrupoAdminOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_GrupoAdminOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_GrupoAdminCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_GrupoAdminCompleted(Me, New ABC_GrupoAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColPerfiles", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColPerfiles(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColPerfiles", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColPerfilesAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ColPerfilesAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColPerfilesAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColPerfilesOperationCompleted Is Nothing) Then
                Me.ColPerfilesOperationCompleted = AddressOf Me.OnColPerfilesOperationCompleted
            End If
            Me.InvokeAsync("ColPerfiles", New Object() {ptTicket, pRespuesta}, Me.ColPerfilesOperationCompleted, userState)
        End Sub
        
        Private Sub OnColPerfilesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColPerfilesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColPerfilesCompleted(Me, New ColPerfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColUsuariosPerfil", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColUsuariosPerfil(ByRef ptTicket As IDTicket, ByVal pnPerfilUsrID As Integer, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColUsuariosPerfil", New Object() {ptTicket, pnPerfilUsrID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColUsuariosPerfilAsync(ByVal ptTicket As IDTicket, ByVal pnPerfilUsrID As Integer, ByVal pRespuesta As Respuesta)
            Me.ColUsuariosPerfilAsync(ptTicket, pnPerfilUsrID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColUsuariosPerfilAsync(ByVal ptTicket As IDTicket, ByVal pnPerfilUsrID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColUsuariosPerfilOperationCompleted Is Nothing) Then
                Me.ColUsuariosPerfilOperationCompleted = AddressOf Me.OnColUsuariosPerfilOperationCompleted
            End If
            Me.InvokeAsync("ColUsuariosPerfil", New Object() {ptTicket, pnPerfilUsrID, pRespuesta}, Me.ColUsuariosPerfilOperationCompleted, userState)
        End Sub
        
        Private Sub OnColUsuariosPerfilOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColUsuariosPerfilCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColUsuariosPerfilCompleted(Me, New ColUsuariosPerfilCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColProyectosPerfil", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColProyectosPerfil(ByRef ptTicket As IDTicket, ByVal pnPerfilUsuarioID As Integer, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColProyectosPerfil", New Object() {ptTicket, pnPerfilUsuarioID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColProyectosPerfilAsync(ByVal ptTicket As IDTicket, ByVal pnPerfilUsuarioID As Integer, ByVal pRespuesta As Respuesta)
            Me.ColProyectosPerfilAsync(ptTicket, pnPerfilUsuarioID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColProyectosPerfilAsync(ByVal ptTicket As IDTicket, ByVal pnPerfilUsuarioID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColProyectosPerfilOperationCompleted Is Nothing) Then
                Me.ColProyectosPerfilOperationCompleted = AddressOf Me.OnColProyectosPerfilOperationCompleted
            End If
            Me.InvokeAsync("ColProyectosPerfil", New Object() {ptTicket, pnPerfilUsuarioID, pRespuesta}, Me.ColProyectosPerfilOperationCompleted, userState)
        End Sub
        
        Private Sub OnColProyectosPerfilOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColProyectosPerfilCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColProyectosPerfilCompleted(Me, New ColProyectosPerfilCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColPermisosPerfil", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColPermisosPerfil(ByRef ptTicket As IDTicket, ByVal pnPerfilUsuarioID As Integer, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColPermisosPerfil", New Object() {ptTicket, pnPerfilUsuarioID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColPermisosPerfilAsync(ByVal ptTicket As IDTicket, ByVal pnPerfilUsuarioID As Integer, ByVal pRespuesta As Respuesta)
            Me.ColPermisosPerfilAsync(ptTicket, pnPerfilUsuarioID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColPermisosPerfilAsync(ByVal ptTicket As IDTicket, ByVal pnPerfilUsuarioID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColPermisosPerfilOperationCompleted Is Nothing) Then
                Me.ColPermisosPerfilOperationCompleted = AddressOf Me.OnColPermisosPerfilOperationCompleted
            End If
            Me.InvokeAsync("ColPermisosPerfil", New Object() {ptTicket, pnPerfilUsuarioID, pRespuesta}, Me.ColPermisosPerfilOperationCompleted, userState)
        End Sub
        
        Private Sub OnColPermisosPerfilOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColPermisosPerfilCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColPermisosPerfilCompleted(Me, New ColPermisosPerfilCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColTodoslosPerfiles", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColTodoslosPerfiles(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColTodoslosPerfiles", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColTodoslosPerfilesAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ColTodoslosPerfilesAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColTodoslosPerfilesAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColTodoslosPerfilesOperationCompleted Is Nothing) Then
                Me.ColTodoslosPerfilesOperationCompleted = AddressOf Me.OnColTodoslosPerfilesOperationCompleted
            End If
            Me.InvokeAsync("ColTodoslosPerfiles", New Object() {ptTicket, pRespuesta}, Me.ColTodoslosPerfilesOperationCompleted, userState)
        End Sub
        
        Private Sub OnColTodoslosPerfilesOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColTodoslosPerfilesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColTodoslosPerfilesCompleted(Me, New ColTodoslosPerfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_PerfilIdentidadUsr", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_PerfilIdentidadUsr(ByRef ptTicket As IDTicket, ByRef pIdentidadUsr As PerfilUsuario, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta) As Integer
            Dim results() As Object = Me.Invoke("ABC_PerfilIdentidadUsr", New Object() {ptTicket, pIdentidadUsr, poperABC, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pIdentidadUsr = CType(results(2),PerfilUsuario)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_PerfilIdentidadUsrAsync(ByVal ptTicket As IDTicket, ByVal pIdentidadUsr As PerfilUsuario, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta)
            Me.ABC_PerfilIdentidadUsrAsync(ptTicket, pIdentidadUsr, poperABC, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_PerfilIdentidadUsrAsync(ByVal ptTicket As IDTicket, ByVal pIdentidadUsr As PerfilUsuario, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ABC_PerfilIdentidadUsrOperationCompleted Is Nothing) Then
                Me.ABC_PerfilIdentidadUsrOperationCompleted = AddressOf Me.OnABC_PerfilIdentidadUsrOperationCompleted
            End If
            Me.InvokeAsync("ABC_PerfilIdentidadUsr", New Object() {ptTicket, pIdentidadUsr, poperABC, pRespuesta}, Me.ABC_PerfilIdentidadUsrOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_PerfilIdentidadUsrOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_PerfilIdentidadUsrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_PerfilIdentidadUsrCompleted(Me, New ABC_PerfilIdentidadUsrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_PerfilUsuario", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_PerfilUsuario(ByRef ptTicket As IDTicket, ByRef pPerfilUsuario As PerfilUsuario, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta, ByVal sDescripcion As String) As Integer
            Dim results() As Object = Me.Invoke("ABC_PerfilUsuario", New Object() {ptTicket, pPerfilUsuario, poperABC, pRespuesta, sDescripcion})
            ptTicket = CType(results(1),IDTicket)
            pPerfilUsuario = CType(results(2),PerfilUsuario)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_PerfilUsuarioAsync(ByVal ptTicket As IDTicket, ByVal pPerfilUsuario As PerfilUsuario, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal sDescripcion As String)
            Me.ABC_PerfilUsuarioAsync(ptTicket, pPerfilUsuario, poperABC, pRespuesta, sDescripcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_PerfilUsuarioAsync(ByVal ptTicket As IDTicket, ByVal pPerfilUsuario As PerfilUsuario, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal sDescripcion As String, ByVal userState As Object)
            If (Me.ABC_PerfilUsuarioOperationCompleted Is Nothing) Then
                Me.ABC_PerfilUsuarioOperationCompleted = AddressOf Me.OnABC_PerfilUsuarioOperationCompleted
            End If
            Me.InvokeAsync("ABC_PerfilUsuario", New Object() {ptTicket, pPerfilUsuario, poperABC, pRespuesta, sDescripcion}, Me.ABC_PerfilUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_PerfilUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_PerfilUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_PerfilUsuarioCompleted(Me, New ABC_PerfilUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_PermisoPerfilUsuario", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_PermisoPerfilUsuario(ByRef ptTicket As IDTicket, ByVal pobjPermiso As Permiso, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta) As Integer
            Dim results() As Object = Me.Invoke("ABC_PermisoPerfilUsuario", New Object() {ptTicket, pobjPermiso, poperABC, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_PermisoPerfilUsuarioAsync(ByVal ptTicket As IDTicket, ByVal pobjPermiso As Permiso, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta)
            Me.ABC_PermisoPerfilUsuarioAsync(ptTicket, pobjPermiso, poperABC, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_PermisoPerfilUsuarioAsync(ByVal ptTicket As IDTicket, ByVal pobjPermiso As Permiso, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ABC_PermisoPerfilUsuarioOperationCompleted Is Nothing) Then
                Me.ABC_PermisoPerfilUsuarioOperationCompleted = AddressOf Me.OnABC_PermisoPerfilUsuarioOperationCompleted
            End If
            Me.InvokeAsync("ABC_PermisoPerfilUsuario", New Object() {ptTicket, pobjPermiso, poperABC, pRespuesta}, Me.ABC_PermisoPerfilUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_PermisoPerfilUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_PermisoPerfilUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_PermisoPerfilUsuarioCompleted(Me, New ABC_PermisoPerfilUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_PerfilUsuarioProyecto", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_PerfilUsuarioProyecto(ByRef ptTicket As IDTicket, ByRef pobjProyecto As Proyecto, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta) As Integer
            Dim results() As Object = Me.Invoke("ABC_PerfilUsuarioProyecto", New Object() {ptTicket, pobjProyecto, poperABC, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pobjProyecto = CType(results(2),Proyecto)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_PerfilUsuarioProyectoAsync(ByVal ptTicket As IDTicket, ByVal pobjProyecto As Proyecto, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta)
            Me.ABC_PerfilUsuarioProyectoAsync(ptTicket, pobjProyecto, poperABC, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_PerfilUsuarioProyectoAsync(ByVal ptTicket As IDTicket, ByVal pobjProyecto As Proyecto, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ABC_PerfilUsuarioProyectoOperationCompleted Is Nothing) Then
                Me.ABC_PerfilUsuarioProyectoOperationCompleted = AddressOf Me.OnABC_PerfilUsuarioProyectoOperationCompleted
            End If
            Me.InvokeAsync("ABC_PerfilUsuarioProyecto", New Object() {ptTicket, pobjProyecto, poperABC, pRespuesta}, Me.ABC_PerfilUsuarioProyectoOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_PerfilUsuarioProyectoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_PerfilUsuarioProyectoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_PerfilUsuarioProyectoCompleted(Me, New ABC_PerfilUsuarioProyectoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/RegistraIntentoAcceso", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegistraIntentoAcceso(ByRef ptTicket As IDTicket, ByVal pnPermisoAplicacionID As Integer, ByVal pblnEsLogin As Boolean, ByVal pstrRespuestaID As String, ByVal pstrDescRespuesta As String) As Respuesta
            Dim results() As Object = Me.Invoke("RegistraIntentoAcceso", New Object() {ptTicket, pnPermisoAplicacionID, pblnEsLogin, pstrRespuestaID, pstrDescRespuesta})
            ptTicket = CType(results(1),IDTicket)
            Return CType(results(0),Respuesta)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegistraIntentoAccesoAsync(ByVal ptTicket As IDTicket, ByVal pnPermisoAplicacionID As Integer, ByVal pblnEsLogin As Boolean, ByVal pstrRespuestaID As String, ByVal pstrDescRespuesta As String)
            Me.RegistraIntentoAccesoAsync(ptTicket, pnPermisoAplicacionID, pblnEsLogin, pstrRespuestaID, pstrDescRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegistraIntentoAccesoAsync(ByVal ptTicket As IDTicket, ByVal pnPermisoAplicacionID As Integer, ByVal pblnEsLogin As Boolean, ByVal pstrRespuestaID As String, ByVal pstrDescRespuesta As String, ByVal userState As Object)
            If (Me.RegistraIntentoAccesoOperationCompleted Is Nothing) Then
                Me.RegistraIntentoAccesoOperationCompleted = AddressOf Me.OnRegistraIntentoAccesoOperationCompleted
            End If
            Me.InvokeAsync("RegistraIntentoAcceso", New Object() {ptTicket, pnPermisoAplicacionID, pblnEsLogin, pstrRespuestaID, pstrDescRespuesta}, Me.RegistraIntentoAccesoOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegistraIntentoAccesoOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegistraIntentoAccesoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegistraIntentoAccesoCompleted(Me, New RegistraIntentoAccesoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ObtenerHistAccesoUsrxEvento", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerHistAccesoUsrxEvento(ByRef ptTicket As IDTicket, ByVal pnProyectoID As Integer, ByVal pnVersionAplicacionID As Integer, ByVal pnUsrID As String, ByVal pnEventoId As Integer, ByVal FechaI As String, ByVal FechaF As String, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerHistAccesoUsrxEvento", New Object() {ptTicket, pnProyectoID, pnVersionAplicacionID, pnUsrID, pnEventoId, FechaI, FechaF, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerHistAccesoUsrxEventoAsync(ByVal ptTicket As IDTicket, ByVal pnProyectoID As Integer, ByVal pnVersionAplicacionID As Integer, ByVal pnUsrID As String, ByVal pnEventoId As Integer, ByVal FechaI As String, ByVal FechaF As String, ByVal pRespuesta As Respuesta)
            Me.ObtenerHistAccesoUsrxEventoAsync(ptTicket, pnProyectoID, pnVersionAplicacionID, pnUsrID, pnEventoId, FechaI, FechaF, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerHistAccesoUsrxEventoAsync(ByVal ptTicket As IDTicket, ByVal pnProyectoID As Integer, ByVal pnVersionAplicacionID As Integer, ByVal pnUsrID As String, ByVal pnEventoId As Integer, ByVal FechaI As String, ByVal FechaF As String, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ObtenerHistAccesoUsrxEventoOperationCompleted Is Nothing) Then
                Me.ObtenerHistAccesoUsrxEventoOperationCompleted = AddressOf Me.OnObtenerHistAccesoUsrxEventoOperationCompleted
            End If
            Me.InvokeAsync("ObtenerHistAccesoUsrxEvento", New Object() {ptTicket, pnProyectoID, pnVersionAplicacionID, pnUsrID, pnEventoId, FechaI, FechaF, pRespuesta}, Me.ObtenerHistAccesoUsrxEventoOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerHistAccesoUsrxEventoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerHistAccesoUsrxEventoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerHistAccesoUsrxEventoCompleted(Me, New ObtenerHistAccesoUsrxEventoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColEventos", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColEventos(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColEventos", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColEventosAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ColEventosAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColEventosAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColEventosOperationCompleted Is Nothing) Then
                Me.ColEventosOperationCompleted = AddressOf Me.OnColEventosOperationCompleted
            End If
            Me.InvokeAsync("ColEventos", New Object() {ptTicket, pRespuesta}, Me.ColEventosOperationCompleted, userState)
        End Sub
        
        Private Sub OnColEventosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColEventosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColEventosCompleted(Me, New ColEventosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColEventosRes", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColEventosRes(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColEventosRes", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColEventosResAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ColEventosResAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColEventosResAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColEventosResOperationCompleted Is Nothing) Then
                Me.ColEventosResOperationCompleted = AddressOf Me.OnColEventosResOperationCompleted
            End If
            Me.InvokeAsync("ColEventosRes", New Object() {ptTicket, pRespuesta}, Me.ColEventosResOperationCompleted, userState)
        End Sub
        
        Private Sub OnColEventosResOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColEventosResCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColEventosResCompleted(Me, New ColEventosResCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/RegistraEventos", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegistraEventos(ByRef ptTicket As IDTicket, ByVal strDesc As String, ByVal enEventoLog As Integer) As Respuesta
            Dim results() As Object = Me.Invoke("RegistraEventos", New Object() {ptTicket, strDesc, enEventoLog})
            ptTicket = CType(results(1),IDTicket)
            Return CType(results(0),Respuesta)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegistraEventosAsync(ByVal ptTicket As IDTicket, ByVal strDesc As String, ByVal enEventoLog As Integer)
            Me.RegistraEventosAsync(ptTicket, strDesc, enEventoLog, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegistraEventosAsync(ByVal ptTicket As IDTicket, ByVal strDesc As String, ByVal enEventoLog As Integer, ByVal userState As Object)
            If (Me.RegistraEventosOperationCompleted Is Nothing) Then
                Me.RegistraEventosOperationCompleted = AddressOf Me.OnRegistraEventosOperationCompleted
            End If
            Me.InvokeAsync("RegistraEventos", New Object() {ptTicket, strDesc, enEventoLog}, Me.RegistraEventosOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegistraEventosOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegistraEventosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegistraEventosCompleted(Me, New RegistraEventosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColClientexGrupoAdmin", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColClientexGrupoAdmin(ByRef ptTicket As IDTicket, ByVal GrupoID As Integer, ByRef pRespuesta As Respuesta) As String
            Dim results() As Object = Me.Invoke("ColClientexGrupoAdmin", New Object() {ptTicket, GrupoID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColClientexGrupoAdminAsync(ByVal ptTicket As IDTicket, ByVal GrupoID As Integer, ByVal pRespuesta As Respuesta)
            Me.ColClientexGrupoAdminAsync(ptTicket, GrupoID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColClientexGrupoAdminAsync(ByVal ptTicket As IDTicket, ByVal GrupoID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColClientexGrupoAdminOperationCompleted Is Nothing) Then
                Me.ColClientexGrupoAdminOperationCompleted = AddressOf Me.OnColClientexGrupoAdminOperationCompleted
            End If
            Me.InvokeAsync("ColClientexGrupoAdmin", New Object() {ptTicket, GrupoID, pRespuesta}, Me.ColClientexGrupoAdminOperationCompleted, userState)
        End Sub
        
        Private Sub OnColClientexGrupoAdminOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColClientexGrupoAdminCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColClientexGrupoAdminCompleted(Me, New ColClientexGrupoAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ObtenerMenu", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerMenu(ByVal UsrID As String, ByVal VersionAplicacionID As Integer, ByVal ProyectoID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerMenu", New Object() {UsrID, VersionAplicacionID, ProyectoID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerMenuAsync(ByVal UsrID As String, ByVal VersionAplicacionID As Integer, ByVal ProyectoID As Integer)
            Me.ObtenerMenuAsync(UsrID, VersionAplicacionID, ProyectoID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerMenuAsync(ByVal UsrID As String, ByVal VersionAplicacionID As Integer, ByVal ProyectoID As Integer, ByVal userState As Object)
            If (Me.ObtenerMenuOperationCompleted Is Nothing) Then
                Me.ObtenerMenuOperationCompleted = AddressOf Me.OnObtenerMenuOperationCompleted
            End If
            Me.InvokeAsync("ObtenerMenu", New Object() {UsrID, VersionAplicacionID, ProyectoID}, Me.ObtenerMenuOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerMenuOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerMenuCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerMenuCompleted(Me, New ObtenerMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ObtenerSubMenu", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerSubMenu(ByVal H1 As String, ByVal UsrID As String, ByVal VersionAplicacionID As Integer, ByVal ProyectoID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerSubMenu", New Object() {H1, UsrID, VersionAplicacionID, ProyectoID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerSubMenuAsync(ByVal H1 As String, ByVal UsrID As String, ByVal VersionAplicacionID As Integer, ByVal ProyectoID As Integer)
            Me.ObtenerSubMenuAsync(H1, UsrID, VersionAplicacionID, ProyectoID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerSubMenuAsync(ByVal H1 As String, ByVal UsrID As String, ByVal VersionAplicacionID As Integer, ByVal ProyectoID As Integer, ByVal userState As Object)
            If (Me.ObtenerSubMenuOperationCompleted Is Nothing) Then
                Me.ObtenerSubMenuOperationCompleted = AddressOf Me.OnObtenerSubMenuOperationCompleted
            End If
            Me.InvokeAsync("ObtenerSubMenu", New Object() {H1, UsrID, VersionAplicacionID, ProyectoID}, Me.ObtenerSubMenuOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerSubMenuOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerSubMenuCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerSubMenuCompleted(Me, New ObtenerSubMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ObtenerTemplate", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerTemplate(ByVal TemplateID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerTemplate", New Object() {TemplateID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerTemplateAsync(ByVal TemplateID As Integer)
            Me.ObtenerTemplateAsync(TemplateID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerTemplateAsync(ByVal TemplateID As Integer, ByVal userState As Object)
            If (Me.ObtenerTemplateOperationCompleted Is Nothing) Then
                Me.ObtenerTemplateOperationCompleted = AddressOf Me.OnObtenerTemplateOperationCompleted
            End If
            Me.InvokeAsync("ObtenerTemplate", New Object() {TemplateID}, Me.ObtenerTemplateOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerTemplateOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerTemplateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerTemplateCompleted(Me, New ObtenerTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ObtenerElementosComboEst", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerElementosComboEst(ByVal TemplateID As Integer, ByVal FieldID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerElementosComboEst", New Object() {TemplateID, FieldID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerElementosComboEstAsync(ByVal TemplateID As Integer, ByVal FieldID As Integer)
            Me.ObtenerElementosComboEstAsync(TemplateID, FieldID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerElementosComboEstAsync(ByVal TemplateID As Integer, ByVal FieldID As Integer, ByVal userState As Object)
            If (Me.ObtenerElementosComboEstOperationCompleted Is Nothing) Then
                Me.ObtenerElementosComboEstOperationCompleted = AddressOf Me.OnObtenerElementosComboEstOperationCompleted
            End If
            Me.InvokeAsync("ObtenerElementosComboEst", New Object() {TemplateID, FieldID}, Me.ObtenerElementosComboEstOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerElementosComboEstOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerElementosComboEstCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerElementosComboEstCompleted(Me, New ObtenerElementosComboEstCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ObtenerElementosComboDin", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerElementosComboDin(ByVal TemplateID As Integer, ByVal FieldID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ObtenerElementosComboDin", New Object() {TemplateID, FieldID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerElementosComboDinAsync(ByVal TemplateID As Integer, ByVal FieldID As Integer)
            Me.ObtenerElementosComboDinAsync(TemplateID, FieldID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerElementosComboDinAsync(ByVal TemplateID As Integer, ByVal FieldID As Integer, ByVal userState As Object)
            If (Me.ObtenerElementosComboDinOperationCompleted Is Nothing) Then
                Me.ObtenerElementosComboDinOperationCompleted = AddressOf Me.OnObtenerElementosComboDinOperationCompleted
            End If
            Me.InvokeAsync("ObtenerElementosComboDin", New Object() {TemplateID, FieldID}, Me.ObtenerElementosComboDinOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerElementosComboDinOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerElementosComboDinCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerElementosComboDinCompleted(Me, New ObtenerElementosComboDinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/EjecutaSPCondicional", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EjecutaSPCondicional(ByVal SP As String, ByVal Condicion1 As String, ByVal Condicion2 As String, ByVal Condicion3 As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("EjecutaSPCondicional", New Object() {SP, Condicion1, Condicion2, Condicion3})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EjecutaSPCondicionalAsync(ByVal SP As String, ByVal Condicion1 As String, ByVal Condicion2 As String, ByVal Condicion3 As String)
            Me.EjecutaSPCondicionalAsync(SP, Condicion1, Condicion2, Condicion3, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EjecutaSPCondicionalAsync(ByVal SP As String, ByVal Condicion1 As String, ByVal Condicion2 As String, ByVal Condicion3 As String, ByVal userState As Object)
            If (Me.EjecutaSPCondicionalOperationCompleted Is Nothing) Then
                Me.EjecutaSPCondicionalOperationCompleted = AddressOf Me.OnEjecutaSPCondicionalOperationCompleted
            End If
            Me.InvokeAsync("EjecutaSPCondicional", New Object() {SP, Condicion1, Condicion2, Condicion3}, Me.EjecutaSPCondicionalOperationCompleted, userState)
        End Sub
        
        Private Sub OnEjecutaSPCondicionalOperationCompleted(ByVal arg As Object)
            If (Not (Me.EjecutaSPCondicionalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EjecutaSPCondicionalCompleted(Me, New EjecutaSPCondicionalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColProyectosMega", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColProyectosMega(ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColProyectosMega", New Object() {pRespuesta})
            pRespuesta = CType(results(1),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColProyectosMegaAsync(ByVal pRespuesta As Respuesta)
            Me.ColProyectosMegaAsync(pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColProyectosMegaAsync(ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColProyectosMegaOperationCompleted Is Nothing) Then
                Me.ColProyectosMegaOperationCompleted = AddressOf Me.OnColProyectosMegaOperationCompleted
            End If
            Me.InvokeAsync("ColProyectosMega", New Object() {pRespuesta}, Me.ColProyectosMegaOperationCompleted, userState)
        End Sub
        
        Private Sub OnColProyectosMegaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColProyectosMegaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColProyectosMegaCompleted(Me, New ColProyectosMegaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ObtenerCadenaConexion", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerCadenaConexion(ByVal ProyectoId As Integer, ByVal AplicacionId As Integer, ByRef pRespuesta As Respuesta) As String
            Dim results() As Object = Me.Invoke("ObtenerCadenaConexion", New Object() {ProyectoId, AplicacionId, pRespuesta})
            pRespuesta = CType(results(1),Respuesta)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerCadenaConexionAsync(ByVal ProyectoId As Integer, ByVal AplicacionId As Integer, ByVal pRespuesta As Respuesta)
            Me.ObtenerCadenaConexionAsync(ProyectoId, AplicacionId, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCadenaConexionAsync(ByVal ProyectoId As Integer, ByVal AplicacionId As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ObtenerCadenaConexionOperationCompleted Is Nothing) Then
                Me.ObtenerCadenaConexionOperationCompleted = AddressOf Me.OnObtenerCadenaConexionOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCadenaConexion", New Object() {ProyectoId, AplicacionId, pRespuesta}, Me.ObtenerCadenaConexionOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCadenaConexionOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCadenaConexionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCadenaConexionCompleted(Me, New ObtenerCadenaConexionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ObtenerCadenaConexionDSN", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ObtenerCadenaConexionDSN(ByVal ProyectoId As Integer, ByVal AplicacionId As Integer, ByRef pRespuesta As Respuesta, ByRef sDSN As String, ByRef strUsrPwd As String)
            Dim results() As Object = Me.Invoke("ObtenerCadenaConexionDSN", New Object() {ProyectoId, AplicacionId, pRespuesta, sDSN, strUsrPwd})
            pRespuesta = CType(results(0),Respuesta)
            sDSN = CType(results(1),String)
            strUsrPwd = CType(results(2),String)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCadenaConexionDSNAsync(ByVal ProyectoId As Integer, ByVal AplicacionId As Integer, ByVal pRespuesta As Respuesta, ByVal sDSN As String, ByVal strUsrPwd As String)
            Me.ObtenerCadenaConexionDSNAsync(ProyectoId, AplicacionId, pRespuesta, sDSN, strUsrPwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerCadenaConexionDSNAsync(ByVal ProyectoId As Integer, ByVal AplicacionId As Integer, ByVal pRespuesta As Respuesta, ByVal sDSN As String, ByVal strUsrPwd As String, ByVal userState As Object)
            If (Me.ObtenerCadenaConexionDSNOperationCompleted Is Nothing) Then
                Me.ObtenerCadenaConexionDSNOperationCompleted = AddressOf Me.OnObtenerCadenaConexionDSNOperationCompleted
            End If
            Me.InvokeAsync("ObtenerCadenaConexionDSN", New Object() {ProyectoId, AplicacionId, pRespuesta, sDSN, strUsrPwd}, Me.ObtenerCadenaConexionDSNOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerCadenaConexionDSNOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerCadenaConexionDSNCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerCadenaConexionDSNCompleted(Me, New ObtenerCadenaConexionDSNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ABC_AppProy", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ABC_AppProy(ByRef ptTicket As IDTicket, ByRef pAppProy As AppProy, ByVal poperABC As OperacionesABC, ByRef pRespuesta As Respuesta) As Integer
            Dim results() As Object = Me.Invoke("ABC_AppProy", New Object() {ptTicket, pAppProy, poperABC, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pAppProy = CType(results(2),AppProy)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ABC_AppProyAsync(ByVal ptTicket As IDTicket, ByVal pAppProy As AppProy, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta)
            Me.ABC_AppProyAsync(ptTicket, pAppProy, poperABC, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ABC_AppProyAsync(ByVal ptTicket As IDTicket, ByVal pAppProy As AppProy, ByVal poperABC As OperacionesABC, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ABC_AppProyOperationCompleted Is Nothing) Then
                Me.ABC_AppProyOperationCompleted = AddressOf Me.OnABC_AppProyOperationCompleted
            End If
            Me.InvokeAsync("ABC_AppProy", New Object() {ptTicket, pAppProy, poperABC, pRespuesta}, Me.ABC_AppProyOperationCompleted, userState)
        End Sub
        
        Private Sub OnABC_AppProyOperationCompleted(ByVal arg As Object)
            If (Not (Me.ABC_AppProyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ABC_AppProyCompleted(Me, New ABC_AppProyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/CargaAppProy", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaAppProy(ByRef ptTicket As IDTicket, ByVal pnProyectoID As Integer, ByVal pnaplicacionID As Integer, ByRef pRespuesta As Respuesta) As AppProy
            Dim results() As Object = Me.Invoke("CargaAppProy", New Object() {ptTicket, pnProyectoID, pnaplicacionID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),AppProy)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaAppProyAsync(ByVal ptTicket As IDTicket, ByVal pnProyectoID As Integer, ByVal pnaplicacionID As Integer, ByVal pRespuesta As Respuesta)
            Me.CargaAppProyAsync(ptTicket, pnProyectoID, pnaplicacionID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaAppProyAsync(ByVal ptTicket As IDTicket, ByVal pnProyectoID As Integer, ByVal pnaplicacionID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.CargaAppProyOperationCompleted Is Nothing) Then
                Me.CargaAppProyOperationCompleted = AddressOf Me.OnCargaAppProyOperationCompleted
            End If
            Me.InvokeAsync("CargaAppProy", New Object() {ptTicket, pnProyectoID, pnaplicacionID, pRespuesta}, Me.CargaAppProyOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaAppProyOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaAppProyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaAppProyCompleted(Me, New CargaAppProyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColAppProy", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColAppProy(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColAppProy", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColAppProyAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ColAppProyAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColAppProyAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColAppProyOperationCompleted Is Nothing) Then
                Me.ColAppProyOperationCompleted = AddressOf Me.OnColAppProyOperationCompleted
            End If
            Me.InvokeAsync("ColAppProy", New Object() {ptTicket, pRespuesta}, Me.ColAppProyOperationCompleted, userState)
        End Sub
        
        Private Sub OnColAppProyOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColAppProyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColAppProyCompleted(Me, New ColAppProyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColAppProyTipo", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColAppProyTipo() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColAppProyTipo", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColAppProyTipoAsync()
            Me.ColAppProyTipoAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColAppProyTipoAsync(ByVal userState As Object)
            If (Me.ColAppProyTipoOperationCompleted Is Nothing) Then
                Me.ColAppProyTipoOperationCompleted = AddressOf Me.OnColAppProyTipoOperationCompleted
            End If
            Me.InvokeAsync("ColAppProyTipo", New Object(-1) {}, Me.ColAppProyTipoOperationCompleted, userState)
        End Sub
        
        Private Sub OnColAppProyTipoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColAppProyTipoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColAppProyTipoCompleted(Me, New ColAppProyTipoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColBusAppProy", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColBusAppProy(ByRef pnProy As Integer, ByRef pnApp As Integer, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColBusAppProy", New Object() {pnProy, pnApp, pRespuesta})
            pnProy = CType(results(1),Integer)
            pnApp = CType(results(2),Integer)
            pRespuesta = CType(results(3),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColBusAppProyAsync(ByVal pnProy As Integer, ByVal pnApp As Integer, ByVal pRespuesta As Respuesta)
            Me.ColBusAppProyAsync(pnProy, pnApp, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColBusAppProyAsync(ByVal pnProy As Integer, ByVal pnApp As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColBusAppProyOperationCompleted Is Nothing) Then
                Me.ColBusAppProyOperationCompleted = AddressOf Me.OnColBusAppProyOperationCompleted
            End If
            Me.InvokeAsync("ColBusAppProy", New Object() {pnProy, pnApp, pRespuesta}, Me.ColBusAppProyOperationCompleted, userState)
        End Sub
        
        Private Sub OnColBusAppProyOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColBusAppProyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColBusAppProyCompleted(Me, New ColBusAppProyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/EncriptarPwd", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EncriptarPwd(ByVal Strpwd As String, ByRef pRespuesta As Respuesta) As String
            Dim results() As Object = Me.Invoke("EncriptarPwd", New Object() {Strpwd, pRespuesta})
            pRespuesta = CType(results(1),Respuesta)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EncriptarPwdAsync(ByVal Strpwd As String, ByVal pRespuesta As Respuesta)
            Me.EncriptarPwdAsync(Strpwd, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EncriptarPwdAsync(ByVal Strpwd As String, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.EncriptarPwdOperationCompleted Is Nothing) Then
                Me.EncriptarPwdOperationCompleted = AddressOf Me.OnEncriptarPwdOperationCompleted
            End If
            Me.InvokeAsync("EncriptarPwd", New Object() {Strpwd, pRespuesta}, Me.EncriptarPwdOperationCompleted, userState)
        End Sub
        
        Private Sub OnEncriptarPwdOperationCompleted(ByVal arg As Object)
            If (Not (Me.EncriptarPwdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EncriptarPwdCompleted(Me, New EncriptarPwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/DesencriptarPwd", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DesencriptarPwd(ByVal strCifrado As String, ByRef pRespuesta As Respuesta) As String
            Dim results() As Object = Me.Invoke("DesencriptarPwd", New Object() {strCifrado, pRespuesta})
            pRespuesta = CType(results(1),Respuesta)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DesencriptarPwdAsync(ByVal strCifrado As String, ByVal pRespuesta As Respuesta)
            Me.DesencriptarPwdAsync(strCifrado, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DesencriptarPwdAsync(ByVal strCifrado As String, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.DesencriptarPwdOperationCompleted Is Nothing) Then
                Me.DesencriptarPwdOperationCompleted = AddressOf Me.OnDesencriptarPwdOperationCompleted
            End If
            Me.InvokeAsync("DesencriptarPwd", New Object() {strCifrado, pRespuesta}, Me.DesencriptarPwdOperationCompleted, userState)
        End Sub
        
        Private Sub OnDesencriptarPwdOperationCompleted(ByVal arg As Object)
            If (Not (Me.DesencriptarPwdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DesencriptarPwdCompleted(Me, New DesencriptarPwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColResponsableAdministrar", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColResponsableAdministrar(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColResponsableAdministrar", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColResponsableAdministrarAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ColResponsableAdministrarAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColResponsableAdministrarAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColResponsableAdministrarOperationCompleted Is Nothing) Then
                Me.ColResponsableAdministrarOperationCompleted = AddressOf Me.OnColResponsableAdministrarOperationCompleted
            End If
            Me.InvokeAsync("ColResponsableAdministrar", New Object() {ptTicket, pRespuesta}, Me.ColResponsableAdministrarOperationCompleted, userState)
        End Sub
        
        Private Sub OnColResponsableAdministrarOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColResponsableAdministrarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColResponsableAdministrarCompleted(Me, New ColResponsableAdministrarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ValidaUsrForaneo", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidaUsrForaneo(ByVal userId As String) As String
            Dim results() As Object = Me.Invoke("ValidaUsrForaneo", New Object() {userId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidaUsrForaneoAsync(ByVal userId As String)
            Me.ValidaUsrForaneoAsync(userId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidaUsrForaneoAsync(ByVal userId As String, ByVal userState As Object)
            If (Me.ValidaUsrForaneoOperationCompleted Is Nothing) Then
                Me.ValidaUsrForaneoOperationCompleted = AddressOf Me.OnValidaUsrForaneoOperationCompleted
            End If
            Me.InvokeAsync("ValidaUsrForaneo", New Object() {userId}, Me.ValidaUsrForaneoOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidaUsrForaneoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidaUsrForaneoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidaUsrForaneoCompleted(Me, New ValidaUsrForaneoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ValidaUsrForaneoIP", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidaUsrForaneoIP(ByVal pstrUsrID As String, ByVal IP As String) As String
            Dim results() As Object = Me.Invoke("ValidaUsrForaneoIP", New Object() {pstrUsrID, IP})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidaUsrForaneoIPAsync(ByVal pstrUsrID As String, ByVal IP As String)
            Me.ValidaUsrForaneoIPAsync(pstrUsrID, IP, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidaUsrForaneoIPAsync(ByVal pstrUsrID As String, ByVal IP As String, ByVal userState As Object)
            If (Me.ValidaUsrForaneoIPOperationCompleted Is Nothing) Then
                Me.ValidaUsrForaneoIPOperationCompleted = AddressOf Me.OnValidaUsrForaneoIPOperationCompleted
            End If
            Me.InvokeAsync("ValidaUsrForaneoIP", New Object() {pstrUsrID, IP}, Me.ValidaUsrForaneoIPOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidaUsrForaneoIPOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidaUsrForaneoIPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidaUsrForaneoIPCompleted(Me, New ValidaUsrForaneoIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColDynamicUsr", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColDynamicUsr(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColDynamicUsr", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColDynamicUsrAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ColDynamicUsrAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColDynamicUsrAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColDynamicUsrOperationCompleted Is Nothing) Then
                Me.ColDynamicUsrOperationCompleted = AddressOf Me.OnColDynamicUsrOperationCompleted
            End If
            Me.InvokeAsync("ColDynamicUsr", New Object() {ptTicket, pRespuesta}, Me.ColDynamicUsrOperationCompleted, userState)
        End Sub
        
        Private Sub OnColDynamicUsrOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColDynamicUsrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColDynamicUsrCompleted(Me, New ColDynamicUsrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColIdentificador_sistema", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColIdentificador_sistema(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColIdentificador_sistema", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColIdentificador_sistemaAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.ColIdentificador_sistemaAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColIdentificador_sistemaAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.ColIdentificador_sistemaOperationCompleted Is Nothing) Then
                Me.ColIdentificador_sistemaOperationCompleted = AddressOf Me.OnColIdentificador_sistemaOperationCompleted
            End If
            Me.InvokeAsync("ColIdentificador_sistema", New Object() {ptTicket, pRespuesta}, Me.ColIdentificador_sistemaOperationCompleted, userState)
        End Sub
        
        Private Sub OnColIdentificador_sistemaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColIdentificador_sistemaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColIdentificador_sistemaCompleted(Me, New ColIdentificador_sistemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/Genera_Archivo", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Genera_Archivo(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Genera_Archivo", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Genera_ArchivoAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.Genera_ArchivoAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Genera_ArchivoAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.Genera_ArchivoOperationCompleted Is Nothing) Then
                Me.Genera_ArchivoOperationCompleted = AddressOf Me.OnGenera_ArchivoOperationCompleted
            End If
            Me.InvokeAsync("Genera_Archivo", New Object() {ptTicket, pRespuesta}, Me.Genera_ArchivoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenera_ArchivoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Genera_ArchivoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Genera_ArchivoCompleted(Me, New Genera_ArchivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/ColDynamicUsrData", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ColDynamicUsrData(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta, ByVal pnUsrIdentidad As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ColDynamicUsrData", New Object() {ptTicket, pRespuesta, pnUsrIdentidad})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ColDynamicUsrDataAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal pnUsrIdentidad As Integer)
            Me.ColDynamicUsrDataAsync(ptTicket, pRespuesta, pnUsrIdentidad, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ColDynamicUsrDataAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal pnUsrIdentidad As Integer, ByVal userState As Object)
            If (Me.ColDynamicUsrDataOperationCompleted Is Nothing) Then
                Me.ColDynamicUsrDataOperationCompleted = AddressOf Me.OnColDynamicUsrDataOperationCompleted
            End If
            Me.InvokeAsync("ColDynamicUsrData", New Object() {ptTicket, pRespuesta, pnUsrIdentidad}, Me.ColDynamicUsrDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnColDynamicUsrDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.ColDynamicUsrDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ColDynamicUsrDataCompleted(Me, New ColDynamicUsrDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/GeneraNombreArchivo", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraNombreArchivo() As String
            Dim results() As Object = Me.Invoke("GeneraNombreArchivo", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraNombreArchivoAsync()
            Me.GeneraNombreArchivoAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraNombreArchivoAsync(ByVal userState As Object)
            If (Me.GeneraNombreArchivoOperationCompleted Is Nothing) Then
                Me.GeneraNombreArchivoOperationCompleted = AddressOf Me.OnGeneraNombreArchivoOperationCompleted
            End If
            Me.InvokeAsync("GeneraNombreArchivo", New Object(-1) {}, Me.GeneraNombreArchivoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraNombreArchivoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraNombreArchivoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraNombreArchivoCompleted(Me, New GeneraNombreArchivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/BuscaXNombreTabla", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BuscaXNombreTabla(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta, ByVal psTipoTabla As String, ByVal psNombre As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("BuscaXNombreTabla", New Object() {ptTicket, pRespuesta, psTipoTabla, psNombre})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BuscaXNombreTablaAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal psTipoTabla As String, ByVal psNombre As String)
            Me.BuscaXNombreTablaAsync(ptTicket, pRespuesta, psTipoTabla, psNombre, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BuscaXNombreTablaAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal psTipoTabla As String, ByVal psNombre As String, ByVal userState As Object)
            If (Me.BuscaXNombreTablaOperationCompleted Is Nothing) Then
                Me.BuscaXNombreTablaOperationCompleted = AddressOf Me.OnBuscaXNombreTablaOperationCompleted
            End If
            Me.InvokeAsync("BuscaXNombreTabla", New Object() {ptTicket, pRespuesta, psTipoTabla, psNombre}, Me.BuscaXNombreTablaOperationCompleted, userState)
        End Sub
        
        Private Sub OnBuscaXNombreTablaOperationCompleted(ByVal arg As Object)
            If (Not (Me.BuscaXNombreTablaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BuscaXNombreTablaCompleted(Me, New BuscaXNombreTablaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/RptAdminPerfilPermisos", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RptAdminPerfilPermisos(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta, ByVal pnPerfilUsuarioID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RptAdminPerfilPermisos", New Object() {ptTicket, pRespuesta, pnPerfilUsuarioID})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RptAdminPerfilPermisosAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal pnPerfilUsuarioID As Integer)
            Me.RptAdminPerfilPermisosAsync(ptTicket, pRespuesta, pnPerfilUsuarioID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RptAdminPerfilPermisosAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal pnPerfilUsuarioID As Integer, ByVal userState As Object)
            If (Me.RptAdminPerfilPermisosOperationCompleted Is Nothing) Then
                Me.RptAdminPerfilPermisosOperationCompleted = AddressOf Me.OnRptAdminPerfilPermisosOperationCompleted
            End If
            Me.InvokeAsync("RptAdminPerfilPermisos", New Object() {ptTicket, pRespuesta, pnPerfilUsuarioID}, Me.RptAdminPerfilPermisosOperationCompleted, userState)
        End Sub
        
        Private Sub OnRptAdminPerfilPermisosOperationCompleted(ByVal arg As Object)
            If (Not (Me.RptAdminPerfilPermisosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RptAdminPerfilPermisosCompleted(Me, New RptAdminPerfilPermisosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/RptAdminUsrXGrupo", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RptAdminUsrXGrupo(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta, ByVal pnGrupoID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RptAdminUsrXGrupo", New Object() {ptTicket, pRespuesta, pnGrupoID})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RptAdminUsrXGrupoAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal pnGrupoID As Integer)
            Me.RptAdminUsrXGrupoAsync(ptTicket, pRespuesta, pnGrupoID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RptAdminUsrXGrupoAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal pnGrupoID As Integer, ByVal userState As Object)
            If (Me.RptAdminUsrXGrupoOperationCompleted Is Nothing) Then
                Me.RptAdminUsrXGrupoOperationCompleted = AddressOf Me.OnRptAdminUsrXGrupoOperationCompleted
            End If
            Me.InvokeAsync("RptAdminUsrXGrupo", New Object() {ptTicket, pRespuesta, pnGrupoID}, Me.RptAdminUsrXGrupoOperationCompleted, userState)
        End Sub
        
        Private Sub OnRptAdminUsrXGrupoOperationCompleted(ByVal arg As Object)
            If (Not (Me.RptAdminUsrXGrupoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RptAdminUsrXGrupoCompleted(Me, New RptAdminUsrXGrupoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/RptAdminUsrXPerfil", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RptAdminUsrXPerfil(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta, ByVal pnPerfilID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RptAdminUsrXPerfil", New Object() {ptTicket, pRespuesta, pnPerfilID})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RptAdminUsrXPerfilAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal pnPerfilID As Integer)
            Me.RptAdminUsrXPerfilAsync(ptTicket, pRespuesta, pnPerfilID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RptAdminUsrXPerfilAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal pnPerfilID As Integer, ByVal userState As Object)
            If (Me.RptAdminUsrXPerfilOperationCompleted Is Nothing) Then
                Me.RptAdminUsrXPerfilOperationCompleted = AddressOf Me.OnRptAdminUsrXPerfilOperationCompleted
            End If
            Me.InvokeAsync("RptAdminUsrXPerfil", New Object() {ptTicket, pRespuesta, pnPerfilID}, Me.RptAdminUsrXPerfilOperationCompleted, userState)
        End Sub
        
        Private Sub OnRptAdminUsrXPerfilOperationCompleted(ByVal arg As Object)
            If (Not (Me.RptAdminUsrXPerfilCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RptAdminUsrXPerfilCompleted(Me, New RptAdminUsrXPerfilCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/CambiarUltLogin", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CambiarUltLogin(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CambiarUltLogin", New Object() {ptTicket, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CambiarUltLoginAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta)
            Me.CambiarUltLoginAsync(ptTicket, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CambiarUltLoginAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.CambiarUltLoginOperationCompleted Is Nothing) Then
                Me.CambiarUltLoginOperationCompleted = AddressOf Me.OnCambiarUltLoginOperationCompleted
            End If
            Me.InvokeAsync("CambiarUltLogin", New Object() {ptTicket, pRespuesta}, Me.CambiarUltLoginOperationCompleted, userState)
        End Sub
        
        Private Sub OnCambiarUltLoginOperationCompleted(ByVal arg As Object)
            If (Not (Me.CambiarUltLoginCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CambiarUltLoginCompleted(Me, New CambiarUltLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/RegistraAccesoConsultas", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegistraAccesoConsultas(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta, ByVal sDescripcion As String) As Boolean
            Dim results() As Object = Me.Invoke("RegistraAccesoConsultas", New Object() {ptTicket, pRespuesta, sDescripcion})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegistraAccesoConsultasAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal sDescripcion As String)
            Me.RegistraAccesoConsultasAsync(ptTicket, pRespuesta, sDescripcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegistraAccesoConsultasAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal sDescripcion As String, ByVal userState As Object)
            If (Me.RegistraAccesoConsultasOperationCompleted Is Nothing) Then
                Me.RegistraAccesoConsultasOperationCompleted = AddressOf Me.OnRegistraAccesoConsultasOperationCompleted
            End If
            Me.InvokeAsync("RegistraAccesoConsultas", New Object() {ptTicket, pRespuesta, sDescripcion}, Me.RegistraAccesoConsultasOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegistraAccesoConsultasOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegistraAccesoConsultasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegistraAccesoConsultasCompleted(Me, New RegistraAccesoConsultasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/RegistraAccesoDigitalizacion", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RegistraAccesoDigitalizacion(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta, ByVal sDescripcion As String) As Boolean
            Dim results() As Object = Me.Invoke("RegistraAccesoDigitalizacion", New Object() {ptTicket, pRespuesta, sDescripcion})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RegistraAccesoDigitalizacionAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal sDescripcion As String)
            Me.RegistraAccesoDigitalizacionAsync(ptTicket, pRespuesta, sDescripcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RegistraAccesoDigitalizacionAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal sDescripcion As String, ByVal userState As Object)
            If (Me.RegistraAccesoDigitalizacionOperationCompleted Is Nothing) Then
                Me.RegistraAccesoDigitalizacionOperationCompleted = AddressOf Me.OnRegistraAccesoDigitalizacionOperationCompleted
            End If
            Me.InvokeAsync("RegistraAccesoDigitalizacion", New Object() {ptTicket, pRespuesta, sDescripcion}, Me.RegistraAccesoDigitalizacionOperationCompleted, userState)
        End Sub
        
        Private Sub OnRegistraAccesoDigitalizacionOperationCompleted(ByVal arg As Object)
            If (Not (Me.RegistraAccesoDigitalizacionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RegistraAccesoDigitalizacionCompleted(Me, New RegistraAccesoDigitalizacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/CargaConexiones", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CargaConexiones(ByRef ptTicket As IDTicket, ByRef pRespuesta As Respuesta, ByVal sDescripcion As String)
            Dim results() As Object = Me.Invoke("CargaConexiones", New Object() {ptTicket, pRespuesta, sDescripcion})
            ptTicket = CType(results(0),IDTicket)
            pRespuesta = CType(results(1),Respuesta)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaConexionesAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal sDescripcion As String)
            Me.CargaConexionesAsync(ptTicket, pRespuesta, sDescripcion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaConexionesAsync(ByVal ptTicket As IDTicket, ByVal pRespuesta As Respuesta, ByVal sDescripcion As String, ByVal userState As Object)
            If (Me.CargaConexionesOperationCompleted Is Nothing) Then
                Me.CargaConexionesOperationCompleted = AddressOf Me.OnCargaConexionesOperationCompleted
            End If
            Me.InvokeAsync("CargaConexiones", New Object() {ptTicket, pRespuesta, sDescripcion}, Me.CargaConexionesOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaConexionesOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaConexionesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaConexionesCompleted(Me, New CargaConexionesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/CargaConexionDiccionario", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaConexionDiccionario(ByVal strProyecto As String) As String
            Dim results() As Object = Me.Invoke("CargaConexionDiccionario", New Object() {strProyecto})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaConexionDiccionarioAsync(ByVal strProyecto As String)
            Me.CargaConexionDiccionarioAsync(strProyecto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaConexionDiccionarioAsync(ByVal strProyecto As String, ByVal userState As Object)
            If (Me.CargaConexionDiccionarioOperationCompleted Is Nothing) Then
                Me.CargaConexionDiccionarioOperationCompleted = AddressOf Me.OnCargaConexionDiccionarioOperationCompleted
            End If
            Me.InvokeAsync("CargaConexionDiccionario", New Object() {strProyecto}, Me.CargaConexionDiccionarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaConexionDiccionarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaConexionDiccionarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaConexionDiccionarioCompleted(Me, New CargaConexionDiccionarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/CargaPWD_XMLCFG", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CargaPWD_XMLCFG(ByRef pRespuesta As Respuesta) As String
            Dim results() As Object = Me.Invoke("CargaPWD_XMLCFG", New Object() {pRespuesta})
            pRespuesta = CType(results(1),Respuesta)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CargaPWD_XMLCFGAsync(ByVal pRespuesta As Respuesta)
            Me.CargaPWD_XMLCFGAsync(pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CargaPWD_XMLCFGAsync(ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.CargaPWD_XMLCFGOperationCompleted Is Nothing) Then
                Me.CargaPWD_XMLCFGOperationCompleted = AddressOf Me.OnCargaPWD_XMLCFGOperationCompleted
            End If
            Me.InvokeAsync("CargaPWD_XMLCFG", New Object() {pRespuesta}, Me.CargaPWD_XMLCFGOperationCompleted, userState)
        End Sub
        
        Private Sub OnCargaPWD_XMLCFGOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargaPWD_XMLCFGCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargaPWD_XMLCFGCompleted(Me, New CargaPWD_XMLCFGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/AsignaPWD_XMLCFG", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AsignaPWD_XMLCFG(ByVal strValor As String, ByRef pRespuesta As Respuesta) As String
            Dim results() As Object = Me.Invoke("AsignaPWD_XMLCFG", New Object() {strValor, pRespuesta})
            pRespuesta = CType(results(1),Respuesta)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AsignaPWD_XMLCFGAsync(ByVal strValor As String, ByVal pRespuesta As Respuesta)
            Me.AsignaPWD_XMLCFGAsync(strValor, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AsignaPWD_XMLCFGAsync(ByVal strValor As String, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.AsignaPWD_XMLCFGOperationCompleted Is Nothing) Then
                Me.AsignaPWD_XMLCFGOperationCompleted = AddressOf Me.OnAsignaPWD_XMLCFGOperationCompleted
            End If
            Me.InvokeAsync("AsignaPWD_XMLCFG", New Object() {strValor, pRespuesta}, Me.AsignaPWD_XMLCFGOperationCompleted, userState)
        End Sub
        
        Private Sub OnAsignaPWD_XMLCFGOperationCompleted(ByVal arg As Object)
            If (Not (Me.AsignaPWD_XMLCFGCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AsignaPWD_XMLCFGCompleted(Me, New AsignaPWD_XMLCFGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/GetCFGParameto", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCFGParameto(ByRef ptTicket As IDTicket, ByVal PnVarsionAplicacionId As Integer, ByVal pnProyectoID As Integer, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetCFGParameto", New Object() {ptTicket, PnVarsionAplicacionId, pnProyectoID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCFGParametoAsync(ByVal ptTicket As IDTicket, ByVal PnVarsionAplicacionId As Integer, ByVal pnProyectoID As Integer, ByVal pRespuesta As Respuesta)
            Me.GetCFGParametoAsync(ptTicket, PnVarsionAplicacionId, pnProyectoID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCFGParametoAsync(ByVal ptTicket As IDTicket, ByVal PnVarsionAplicacionId As Integer, ByVal pnProyectoID As Integer, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.GetCFGParametoOperationCompleted Is Nothing) Then
                Me.GetCFGParametoOperationCompleted = AddressOf Me.OnGetCFGParametoOperationCompleted
            End If
            Me.InvokeAsync("GetCFGParameto", New Object() {ptTicket, PnVarsionAplicacionId, pnProyectoID, pRespuesta}, Me.GetCFGParametoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCFGParametoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCFGParametoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCFGParametoCompleted(Me, New GetCFGParametoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/SaveCFGParameto", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveCFGParameto(ByRef ptTicket As IDTicket, ByVal PnVersionAplicacionId As Integer, ByVal pnProyectoID As Integer, ByVal PNombreParametro As String, ByVal pValor As String, ByVal PDescripcion As String, ByRef pRespuesta As Respuesta) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("SaveCFGParameto", New Object() {ptTicket, PnVersionAplicacionId, pnProyectoID, PNombreParametro, pValor, PDescripcion, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveCFGParametoAsync(ByVal ptTicket As IDTicket, ByVal PnVersionAplicacionId As Integer, ByVal pnProyectoID As Integer, ByVal PNombreParametro As String, ByVal pValor As String, ByVal PDescripcion As String, ByVal pRespuesta As Respuesta)
            Me.SaveCFGParametoAsync(ptTicket, PnVersionAplicacionId, pnProyectoID, PNombreParametro, pValor, PDescripcion, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveCFGParametoAsync(ByVal ptTicket As IDTicket, ByVal PnVersionAplicacionId As Integer, ByVal pnProyectoID As Integer, ByVal PNombreParametro As String, ByVal pValor As String, ByVal PDescripcion As String, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.SaveCFGParametoOperationCompleted Is Nothing) Then
                Me.SaveCFGParametoOperationCompleted = AddressOf Me.OnSaveCFGParametoOperationCompleted
            End If
            Me.InvokeAsync("SaveCFGParameto", New Object() {ptTicket, PnVersionAplicacionId, pnProyectoID, PNombreParametro, pValor, PDescripcion, pRespuesta}, Me.SaveCFGParametoOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveCFGParametoOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveCFGParametoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveCFGParametoCompleted(Me, New SaveCFGParametoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("Main/HSMColPermisosUsr", RequestNamespace:="Main", ResponseNamespace:="Main", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HSMColPermisosUsr(ByRef ptTicket As IDTicket, ByVal pstrUsrID As String, ByRef pRespuesta As Respuesta) As Integer()
            Dim results() As Object = Me.Invoke("HSMColPermisosUsr", New Object() {ptTicket, pstrUsrID, pRespuesta})
            ptTicket = CType(results(1),IDTicket)
            pRespuesta = CType(results(2),Respuesta)
            Return CType(results(0),Integer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub HSMColPermisosUsrAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pRespuesta As Respuesta)
            Me.HSMColPermisosUsrAsync(ptTicket, pstrUsrID, pRespuesta, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HSMColPermisosUsrAsync(ByVal ptTicket As IDTicket, ByVal pstrUsrID As String, ByVal pRespuesta As Respuesta, ByVal userState As Object)
            If (Me.HSMColPermisosUsrOperationCompleted Is Nothing) Then
                Me.HSMColPermisosUsrOperationCompleted = AddressOf Me.OnHSMColPermisosUsrOperationCompleted
            End If
            Me.InvokeAsync("HSMColPermisosUsr", New Object() {ptTicket, pstrUsrID, pRespuesta}, Me.HSMColPermisosUsrOperationCompleted, userState)
        End Sub
        
        Private Sub OnHSMColPermisosUsrOperationCompleted(ByVal arg As Object)
            If (Not (Me.HSMColPermisosUsrCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HSMColPermisosUsrCompleted(Me, New HSMColPermisosUsrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class IDTicket
        
        Private ticketIDField() As Byte
        
        Private usrIDField As String
        
        Private ipField As String
        
        Private proyectoIDField As Integer
        
        Private versionAplicacionIDField As Integer
        
        Private fechaHoraInicioField As Date
        
        Private fechaHoraUltimoAccesoField As Date
        
        Private tiempoVidaField As Integer
        
        Private tiempoRestanteField As Integer
        
        Private nombreCompletoField As String
        
        Private nombreUsuarioField As String
        
        Private grupoAdminIDField As Integer
        
        Private clienteIDField As Integer
        
        Private perfilUsuarioIDField As Integer
        
        Private tiempoVidaPwdField As Integer
        
        Private tiempoActualizoPwdField As Integer
        
        Private noIdentidadField As Integer
        
        Private fechaUltLoginField As Date
        
        Private duracionDiasField As Integer
        
        Private avisoCaducidadPwdDiasField As Integer
        
        Private fechaCreacionPwdField As Date
        
        '''<comentarios/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property TicketID() As Byte()
            Get
                Return Me.ticketIDField
            End Get
            Set
                Me.ticketIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property UsrID() As String
            Get
                Return Me.usrIDField
            End Get
            Set
                Me.usrIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property IP() As String
            Get
                Return Me.ipField
            End Get
            Set
                Me.ipField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property ProyectoID() As Integer
            Get
                Return Me.proyectoIDField
            End Get
            Set
                Me.proyectoIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property VersionAplicacionID() As Integer
            Get
                Return Me.versionAplicacionIDField
            End Get
            Set
                Me.versionAplicacionIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property FechaHoraInicio() As Date
            Get
                Return Me.fechaHoraInicioField
            End Get
            Set
                Me.fechaHoraInicioField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property FechaHoraUltimoAcceso() As Date
            Get
                Return Me.fechaHoraUltimoAccesoField
            End Get
            Set
                Me.fechaHoraUltimoAccesoField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property TiempoVida() As Integer
            Get
                Return Me.tiempoVidaField
            End Get
            Set
                Me.tiempoVidaField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property TiempoRestante() As Integer
            Get
                Return Me.tiempoRestanteField
            End Get
            Set
                Me.tiempoRestanteField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property NombreCompleto() As String
            Get
                Return Me.nombreCompletoField
            End Get
            Set
                Me.nombreCompletoField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property NombreUsuario() As String
            Get
                Return Me.nombreUsuarioField
            End Get
            Set
                Me.nombreUsuarioField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property GrupoAdminID() As Integer
            Get
                Return Me.grupoAdminIDField
            End Get
            Set
                Me.grupoAdminIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property ClienteID() As Integer
            Get
                Return Me.clienteIDField
            End Get
            Set
                Me.clienteIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property PerfilUsuarioID() As Integer
            Get
                Return Me.perfilUsuarioIDField
            End Get
            Set
                Me.perfilUsuarioIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property TiempoVidaPwd() As Integer
            Get
                Return Me.tiempoVidaPwdField
            End Get
            Set
                Me.tiempoVidaPwdField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property TiempoActualizoPwd() As Integer
            Get
                Return Me.tiempoActualizoPwdField
            End Get
            Set
                Me.tiempoActualizoPwdField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property NoIdentidad() As Integer
            Get
                Return Me.noIdentidadField
            End Get
            Set
                Me.noIdentidadField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property FechaUltLogin() As Date
            Get
                Return Me.fechaUltLoginField
            End Get
            Set
                Me.fechaUltLoginField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property DuracionDias() As Integer
            Get
                Return Me.duracionDiasField
            End Get
            Set
                Me.duracionDiasField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property AvisoCaducidadPwdDias() As Integer
            Get
                Return Me.avisoCaducidadPwdDiasField
            End Get
            Set
                Me.avisoCaducidadPwdDiasField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property FechaCreacionPwd() As Date
            Get
                Return Me.fechaCreacionPwdField
            End Get
            Set
                Me.fechaCreacionPwdField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class AppProy
        
        Private llaveIDField As Integer
        
        Private llavePadreIDField As Integer
        
        Private proyectoIDField As Integer
        
        Private aplicacionIDField As Integer
        
        Private dNSField As String
        
        Private userField As String
        
        Private pWDField As String
        
        Private driverField As String
        
        Private serverField As String
        
        Private bDNombreField As String
        
        Private argumentoField As Integer
        
        '''<comentarios/>
        Public Property LlaveID() As Integer
            Get
                Return Me.llaveIDField
            End Get
            Set
                Me.llaveIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlavePadreID() As Integer
            Get
                Return Me.llavePadreIDField
            End Get
            Set
                Me.llavePadreIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property ProyectoID() As Integer
            Get
                Return Me.proyectoIDField
            End Get
            Set
                Me.proyectoIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property AplicacionID() As Integer
            Get
                Return Me.aplicacionIDField
            End Get
            Set
                Me.aplicacionIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property DNS() As String
            Get
                Return Me.dNSField
            End Get
            Set
                Me.dNSField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property User() As String
            Get
                Return Me.userField
            End Get
            Set
                Me.userField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property PWD() As String
            Get
                Return Me.pWDField
            End Get
            Set
                Me.pWDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Driver() As String
            Get
                Return Me.driverField
            End Get
            Set
                Me.driverField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Server() As String
            Get
                Return Me.serverField
            End Get
            Set
                Me.serverField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property BDNombre() As String
            Get
                Return Me.bDNombreField
            End Get
            Set
                Me.bDNombreField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Argumento() As Integer
            Get
                Return Me.argumentoField
            End Get
            Set
                Me.argumentoField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class GrupoAdmin
        
        Private llaveIDField As Integer
        
        Private llavePadreIDField As Integer
        
        Private grupoAdminIDField As Integer
        
        Private nombreField As String
        
        Private descripcionField As String
        
        Private responsableIDField As Integer
        
        Private grupoAdminPIDField As Integer
        
        Private clienteIDField As Integer
        
        '''<comentarios/>
        Public Property LlaveID() As Integer
            Get
                Return Me.llaveIDField
            End Get
            Set
                Me.llaveIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlavePadreID() As Integer
            Get
                Return Me.llavePadreIDField
            End Get
            Set
                Me.llavePadreIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property GrupoAdminID() As Integer
            Get
                Return Me.grupoAdminIDField
            End Get
            Set
                Me.grupoAdminIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Nombre() As String
            Get
                Return Me.nombreField
            End Get
            Set
                Me.nombreField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Descripcion() As String
            Get
                Return Me.descripcionField
            End Get
            Set
                Me.descripcionField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property ResponsableID() As Integer
            Get
                Return Me.responsableIDField
            End Get
            Set
                Me.responsableIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property GrupoAdminPID() As Integer
            Get
                Return Me.grupoAdminPIDField
            End Get
            Set
                Me.grupoAdminPIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property ClienteID() As Integer
            Get
                Return Me.clienteIDField
            End Get
            Set
                Me.clienteIDField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class PerfilUsuario
        
        Private grupoAdminIDField As Integer
        
        Private llaveIDField As Integer
        
        Private llavePadreIDField As Integer
        
        Private noIdentidadField As Integer
        
        Private perfilUsuarioIDField As Integer
        
        Private nombreField As String
        
        Private descripcionField As String
        
        Private ptrPoliticaPwdField As PoliticaPwd
        
        Private ptrPoliticaSesionField As PoliticaSesion
        
        '''<comentarios/>
        Public Property GrupoAdminID() As Integer
            Get
                Return Me.grupoAdminIDField
            End Get
            Set
                Me.grupoAdminIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlaveID() As Integer
            Get
                Return Me.llaveIDField
            End Get
            Set
                Me.llaveIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlavePadreID() As Integer
            Get
                Return Me.llavePadreIDField
            End Get
            Set
                Me.llavePadreIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property NoIdentidad() As Integer
            Get
                Return Me.noIdentidadField
            End Get
            Set
                Me.noIdentidadField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property PerfilUsuarioID() As Integer
            Get
                Return Me.perfilUsuarioIDField
            End Get
            Set
                Me.perfilUsuarioIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Nombre() As String
            Get
                Return Me.nombreField
            End Get
            Set
                Me.nombreField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Descripcion() As String
            Get
                Return Me.descripcionField
            End Get
            Set
                Me.descripcionField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property ptrPoliticaPwd() As PoliticaPwd
            Get
                Return Me.ptrPoliticaPwdField
            End Get
            Set
                Me.ptrPoliticaPwdField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property ptrPoliticaSesion() As PoliticaSesion
            Get
                Return Me.ptrPoliticaSesionField
            End Get
            Set
                Me.ptrPoliticaSesionField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class PoliticaPwd
        
        Private llaveIDField As Integer
        
        Private llavePadreIDField As Integer
        
        Private politicaPwdIDField As Integer
        
        Private nombreField As String
        
        Private descripcionField As String
        
        Private longMinField As Byte
        
        Private longMaxField As Byte
        
        Private mayusculasField As Boolean
        
        Private minusculasField As Boolean
        
        Private incluirSimbolosField As Boolean
        
        Private incluirNumerosField As Boolean
        
        Private mascaraField As String
        
        Private duracionDiasField As Integer
        
        Private cantPwdHistoricoField As Integer
        
        Private caracteresIgualesField As Integer
        
        Private caracteresConsecField As Integer
        
        Private scriptValidaPwdField As String
        
        Private cambioPwdResetMinutosField As Integer
        
        Private avisoCaducidadPwdDiasField As Integer
        
        '''<comentarios/>
        Public Property LlaveID() As Integer
            Get
                Return Me.llaveIDField
            End Get
            Set
                Me.llaveIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlavePadreID() As Integer
            Get
                Return Me.llavePadreIDField
            End Get
            Set
                Me.llavePadreIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property PoliticaPwdID() As Integer
            Get
                Return Me.politicaPwdIDField
            End Get
            Set
                Me.politicaPwdIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Nombre() As String
            Get
                Return Me.nombreField
            End Get
            Set
                Me.nombreField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Descripcion() As String
            Get
                Return Me.descripcionField
            End Get
            Set
                Me.descripcionField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LongMin() As Byte
            Get
                Return Me.longMinField
            End Get
            Set
                Me.longMinField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LongMax() As Byte
            Get
                Return Me.longMaxField
            End Get
            Set
                Me.longMaxField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Mayusculas() As Boolean
            Get
                Return Me.mayusculasField
            End Get
            Set
                Me.mayusculasField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Minusculas() As Boolean
            Get
                Return Me.minusculasField
            End Get
            Set
                Me.minusculasField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property IncluirSimbolos() As Boolean
            Get
                Return Me.incluirSimbolosField
            End Get
            Set
                Me.incluirSimbolosField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property IncluirNumeros() As Boolean
            Get
                Return Me.incluirNumerosField
            End Get
            Set
                Me.incluirNumerosField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Mascara() As String
            Get
                Return Me.mascaraField
            End Get
            Set
                Me.mascaraField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property DuracionDias() As Integer
            Get
                Return Me.duracionDiasField
            End Get
            Set
                Me.duracionDiasField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property CantPwdHistorico() As Integer
            Get
                Return Me.cantPwdHistoricoField
            End Get
            Set
                Me.cantPwdHistoricoField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property CaracteresIguales() As Integer
            Get
                Return Me.caracteresIgualesField
            End Get
            Set
                Me.caracteresIgualesField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property CaracteresConsec() As Integer
            Get
                Return Me.caracteresConsecField
            End Get
            Set
                Me.caracteresConsecField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property ScriptValidaPwd() As String
            Get
                Return Me.scriptValidaPwdField
            End Get
            Set
                Me.scriptValidaPwdField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property CambioPwdResetMinutos() As Integer
            Get
                Return Me.cambioPwdResetMinutosField
            End Get
            Set
                Me.cambioPwdResetMinutosField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property AvisoCaducidadPwdDias() As Integer
            Get
                Return Me.avisoCaducidadPwdDiasField
            End Get
            Set
                Me.avisoCaducidadPwdDiasField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class PoliticaSesion
        
        Private llaveIDField As Integer
        
        Private llavePadreIDField As Integer
        
        Private politicaSesionIDField As Integer
        
        Private nombreField As String
        
        Private descripcionField As String
        
        Private duracionMinutosField As Integer
        
        Private permitirMultiSesionField As Boolean
        
        Private intentosFallidosConsecutivosField As Byte
        
        Private intentosFallidosDiaField As Integer
        
        Private periodoInhabCtaDiasField As Integer
        
        Private periodoBorrarCtaDiasField As Integer
        
        '''<comentarios/>
        Public Property LlaveID() As Integer
            Get
                Return Me.llaveIDField
            End Get
            Set
                Me.llaveIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlavePadreID() As Integer
            Get
                Return Me.llavePadreIDField
            End Get
            Set
                Me.llavePadreIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property PoliticaSesionID() As Integer
            Get
                Return Me.politicaSesionIDField
            End Get
            Set
                Me.politicaSesionIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Nombre() As String
            Get
                Return Me.nombreField
            End Get
            Set
                Me.nombreField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Descripcion() As String
            Get
                Return Me.descripcionField
            End Get
            Set
                Me.descripcionField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property DuracionMinutos() As Integer
            Get
                Return Me.duracionMinutosField
            End Get
            Set
                Me.duracionMinutosField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property PermitirMultiSesion() As Boolean
            Get
                Return Me.permitirMultiSesionField
            End Get
            Set
                Me.permitirMultiSesionField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property IntentosFallidosConsecutivos() As Byte
            Get
                Return Me.intentosFallidosConsecutivosField
            End Get
            Set
                Me.intentosFallidosConsecutivosField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property IntentosFallidosDia() As Integer
            Get
                Return Me.intentosFallidosDiaField
            End Get
            Set
                Me.intentosFallidosDiaField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property PeriodoInhabCtaDias() As Integer
            Get
                Return Me.periodoInhabCtaDiasField
            End Get
            Set
                Me.periodoInhabCtaDiasField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property PeriodoBorrarCtaDias() As Integer
            Get
                Return Me.periodoBorrarCtaDiasField
            End Get
            Set
                Me.periodoBorrarCtaDiasField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class IdentidadUsr
        
        Private llaveIDField As Integer
        
        Private llavePadreIDField As Integer
        
        Private usrIDField As String
        
        Private noIdentidadField As Integer
        
        Private pwdField As String
        
        Private nombreField As String
        
        Private apellidoPField As String
        
        Private apellidoMField As String
        
        Private fechaCreacionPwdField As Date
        
        Private ptrPerfilUsuarioField As PerfilUsuario
        
        Private intentosFallidosConsecField As Integer
        
        Private desactivadoField As Boolean
        
        Private debeCambiarPwdField As Boolean
        
        Private llavePublicaField As String
        
        Private grupoAdminIDField As Integer
        
        Private clienteIDField As Integer
        
        Private emailField As String
        
        Private domicilioIDField As Integer
        
        Private intentosFallidosDiaField As Integer
        
        Private fechaDesacIntentosDiaField As Date
        
        Private eliminadoField As Boolean
        
        Private fechaResetPwdField As Date
        
        Private fechaUltLoginField As Date
        
        '''<comentarios/>
        Public Property LlaveID() As Integer
            Get
                Return Me.llaveIDField
            End Get
            Set
                Me.llaveIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlavePadreID() As Integer
            Get
                Return Me.llavePadreIDField
            End Get
            Set
                Me.llavePadreIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property UsrID() As String
            Get
                Return Me.usrIDField
            End Get
            Set
                Me.usrIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property NoIdentidad() As Integer
            Get
                Return Me.noIdentidadField
            End Get
            Set
                Me.noIdentidadField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Pwd() As String
            Get
                Return Me.pwdField
            End Get
            Set
                Me.pwdField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Nombre() As String
            Get
                Return Me.nombreField
            End Get
            Set
                Me.nombreField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property ApellidoP() As String
            Get
                Return Me.apellidoPField
            End Get
            Set
                Me.apellidoPField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property ApellidoM() As String
            Get
                Return Me.apellidoMField
            End Get
            Set
                Me.apellidoMField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property FechaCreacionPwd() As Date
            Get
                Return Me.fechaCreacionPwdField
            End Get
            Set
                Me.fechaCreacionPwdField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property ptrPerfilUsuario() As PerfilUsuario
            Get
                Return Me.ptrPerfilUsuarioField
            End Get
            Set
                Me.ptrPerfilUsuarioField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property IntentosFallidosConsec() As Integer
            Get
                Return Me.intentosFallidosConsecField
            End Get
            Set
                Me.intentosFallidosConsecField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Desactivado() As Boolean
            Get
                Return Me.desactivadoField
            End Get
            Set
                Me.desactivadoField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property DebeCambiarPwd() As Boolean
            Get
                Return Me.debeCambiarPwdField
            End Get
            Set
                Me.debeCambiarPwdField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlavePublica() As String
            Get
                Return Me.llavePublicaField
            End Get
            Set
                Me.llavePublicaField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property GrupoAdminID() As Integer
            Get
                Return Me.grupoAdminIDField
            End Get
            Set
                Me.grupoAdminIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property ClienteID() As Integer
            Get
                Return Me.clienteIDField
            End Get
            Set
                Me.clienteIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property DomicilioID() As Integer
            Get
                Return Me.domicilioIDField
            End Get
            Set
                Me.domicilioIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property IntentosFallidosDia() As Integer
            Get
                Return Me.intentosFallidosDiaField
            End Get
            Set
                Me.intentosFallidosDiaField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property FechaDesacIntentosDia() As Date
            Get
                Return Me.fechaDesacIntentosDiaField
            End Get
            Set
                Me.fechaDesacIntentosDiaField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Eliminado() As Boolean
            Get
                Return Me.eliminadoField
            End Get
            Set
                Me.eliminadoField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property FechaResetPwd() As Date
            Get
                Return Me.fechaResetPwdField
            End Get
            Set
                Me.fechaResetPwdField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property FechaUltLogin() As Date
            Get
                Return Me.fechaUltLoginField
            End Get
            Set
                Me.fechaUltLoginField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class HistAcceso
        
        Private histAccesoIDField As Integer
        
        Private versionAplicacionIDField As Integer
        
        Private noIdentidadField As Integer
        
        Private usrIDField As String
        
        Private eventoIDField As Integer
        
        Private esLoginField As Boolean
        
        Private fechaHoraInicioField As Date
        
        Private ipField As String
        
        Private proyectoIDField As Integer
        
        Private respuestaIDField As String
        
        Private tagField As String
        
        Private descripcionField As String
        
        '''<comentarios/>
        Public Property HistAccesoID() As Integer
            Get
                Return Me.histAccesoIDField
            End Get
            Set
                Me.histAccesoIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property VersionAplicacionID() As Integer
            Get
                Return Me.versionAplicacionIDField
            End Get
            Set
                Me.versionAplicacionIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property NoIdentidad() As Integer
            Get
                Return Me.noIdentidadField
            End Get
            Set
                Me.noIdentidadField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property UsrID() As String
            Get
                Return Me.usrIDField
            End Get
            Set
                Me.usrIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property EventoID() As Integer
            Get
                Return Me.eventoIDField
            End Get
            Set
                Me.eventoIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property EsLogin() As Boolean
            Get
                Return Me.esLoginField
            End Get
            Set
                Me.esLoginField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property FechaHoraInicio() As Date
            Get
                Return Me.fechaHoraInicioField
            End Get
            Set
                Me.fechaHoraInicioField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property IP() As String
            Get
                Return Me.ipField
            End Get
            Set
                Me.ipField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property ProyectoID() As Integer
            Get
                Return Me.proyectoIDField
            End Get
            Set
                Me.proyectoIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property RespuestaID() As String
            Get
                Return Me.respuestaIDField
            End Get
            Set
                Me.respuestaIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Tag() As String
            Get
                Return Me.tagField
            End Get
            Set
                Me.tagField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Descripcion() As String
            Get
                Return Me.descripcionField
            End Get
            Set
                Me.descripcionField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class Proyecto
        
        Private llaveIDField As Integer
        
        Private llavePadreIDField As Integer
        
        Private proyectoIDField As Integer
        
        Private siglasField As String
        
        Private nombreField As String
        
        Private descripcionField As String
        
        Private clienteIDField As Integer
        
        '''<comentarios/>
        Public Property LlaveID() As Integer
            Get
                Return Me.llaveIDField
            End Get
            Set
                Me.llaveIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlavePadreID() As Integer
            Get
                Return Me.llavePadreIDField
            End Get
            Set
                Me.llavePadreIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property ProyectoID() As Integer
            Get
                Return Me.proyectoIDField
            End Get
            Set
                Me.proyectoIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Siglas() As String
            Get
                Return Me.siglasField
            End Get
            Set
                Me.siglasField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Nombre() As String
            Get
                Return Me.nombreField
            End Get
            Set
                Me.nombreField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Descripcion() As String
            Get
                Return Me.descripcionField
            End Get
            Set
                Me.descripcionField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property ClienteID() As Integer
            Get
                Return Me.clienteIDField
            End Get
            Set
                Me.clienteIDField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class Cliente
        
        Private llaveIDField As Integer
        
        Private llavePadreIDField As Integer
        
        Private clienteIDField As Integer
        
        Private nombreField As String
        
        Private descripcionField As String
        
        Private direccion1Field As String
        
        Private direccion2Field As String
        
        Private telefonoField As String
        
        Private emailField As String
        
        '''<comentarios/>
        Public Property LlaveID() As Integer
            Get
                Return Me.llaveIDField
            End Get
            Set
                Me.llaveIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlavePadreID() As Integer
            Get
                Return Me.llavePadreIDField
            End Get
            Set
                Me.llavePadreIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property ClienteID() As Integer
            Get
                Return Me.clienteIDField
            End Get
            Set
                Me.clienteIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Nombre() As String
            Get
                Return Me.nombreField
            End Get
            Set
                Me.nombreField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Descripcion() As String
            Get
                Return Me.descripcionField
            End Get
            Set
                Me.descripcionField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Direccion1() As String
            Get
                Return Me.direccion1Field
            End Get
            Set
                Me.direccion1Field = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Direccion2() As String
            Get
                Return Me.direccion2Field
            End Get
            Set
                Me.direccion2Field = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Telefono() As String
            Get
                Return Me.telefonoField
            End Get
            Set
                Me.telefonoField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Email() As String
            Get
                Return Me.emailField
            End Get
            Set
                Me.emailField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(ReqModulo)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class Requerimiento
        
        Private llaveIDField As Integer
        
        Private llavePadreIDField As Integer
        
        Private requerimientoIDField As Integer
        
        Private nombreField As String
        
        Private descripcionField As String
        
        '''<comentarios/>
        Public Property LlaveID() As Integer
            Get
                Return Me.llaveIDField
            End Get
            Set
                Me.llaveIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlavePadreID() As Integer
            Get
                Return Me.llavePadreIDField
            End Get
            Set
                Me.llavePadreIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property RequerimientoID() As Integer
            Get
                Return Me.requerimientoIDField
            End Get
            Set
                Me.requerimientoIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Nombre() As String
            Get
                Return Me.nombreField
            End Get
            Set
                Me.nombreField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Descripcion() As String
            Get
                Return Me.descripcionField
            End Get
            Set
                Me.descripcionField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class ReqModulo
        Inherits Requerimiento
        
        Private reqModuloIDField As Integer
        
        Private moduloIDField As Integer
        
        Private tagField As String
        
        '''<comentarios/>
        Public Property ReqModuloID() As Integer
            Get
                Return Me.reqModuloIDField
            End Get
            Set
                Me.reqModuloIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property ModuloID() As Integer
            Get
                Return Me.moduloIDField
            End Get
            Set
                Me.moduloIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Tag() As String
            Get
                Return Me.tagField
            End Get
            Set
                Me.tagField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class Modulo
        
        Private llaveIDField As Integer
        
        Private llavePadreIDField As Integer
        
        Private moduloIDField As Integer
        
        Private nbModuloField As String
        
        Private descripcionField As String
        
        Private versionAplicacionIDField As Integer
        
        '''<comentarios/>
        Public Property LlaveID() As Integer
            Get
                Return Me.llaveIDField
            End Get
            Set
                Me.llaveIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlavePadreID() As Integer
            Get
                Return Me.llavePadreIDField
            End Get
            Set
                Me.llavePadreIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property ModuloID() As Integer
            Get
                Return Me.moduloIDField
            End Get
            Set
                Me.moduloIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property NbModulo() As String
            Get
                Return Me.nbModuloField
            End Get
            Set
                Me.nbModuloField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Descripcion() As String
            Get
                Return Me.descripcionField
            End Get
            Set
                Me.descripcionField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property VersionAplicacionID() As Integer
            Get
                Return Me.versionAplicacionIDField
            End Get
            Set
                Me.versionAplicacionIDField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class EstacionTrabajo
        
        Private llaveIDField As Integer
        
        Private llavePadreIDField As Integer
        
        Private estacionTrabajoIDField As Integer
        
        Private ipField As String
        
        Private nombreField As String
        
        Private dominioField As String
        
        Private aliasField As String
        
        Private llavePublicaField As String
        
        Private statusField As Integer
        
        '''<comentarios/>
        Public Property LlaveID() As Integer
            Get
                Return Me.llaveIDField
            End Get
            Set
                Me.llaveIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlavePadreID() As Integer
            Get
                Return Me.llavePadreIDField
            End Get
            Set
                Me.llavePadreIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property EstacionTrabajoID() As Integer
            Get
                Return Me.estacionTrabajoIDField
            End Get
            Set
                Me.estacionTrabajoIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property IP() As String
            Get
                Return Me.ipField
            End Get
            Set
                Me.ipField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Nombre() As String
            Get
                Return Me.nombreField
            End Get
            Set
                Me.nombreField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Dominio() As String
            Get
                Return Me.dominioField
            End Get
            Set
                Me.dominioField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property [Alias]() As String
            Get
                Return Me.aliasField
            End Get
            Set
                Me.aliasField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlavePublica() As String
            Get
                Return Me.llavePublicaField
            End Get
            Set
                Me.llavePublicaField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Status() As Integer
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class VersionAplicacion
        
        Private llaveIDField As Integer
        
        Private llavePadreIDField As Integer
        
        Private versionAplicacionIDField As Integer
        
        Private aplicacionIDField As Integer
        
        Private mayorField As Integer
        
        Private menorField As Integer
        
        Private revisionField As Integer
        
        Private descripcionField As String
        
        '''<comentarios/>
        Public Property LlaveID() As Integer
            Get
                Return Me.llaveIDField
            End Get
            Set
                Me.llaveIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlavePadreID() As Integer
            Get
                Return Me.llavePadreIDField
            End Get
            Set
                Me.llavePadreIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property VersionAplicacionID() As Integer
            Get
                Return Me.versionAplicacionIDField
            End Get
            Set
                Me.versionAplicacionIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property AplicacionID() As Integer
            Get
                Return Me.aplicacionIDField
            End Get
            Set
                Me.aplicacionIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Mayor() As Integer
            Get
                Return Me.mayorField
            End Get
            Set
                Me.mayorField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Menor() As Integer
            Get
                Return Me.menorField
            End Get
            Set
                Me.menorField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Revision() As Integer
            Get
                Return Me.revisionField
            End Get
            Set
                Me.revisionField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Descripcion() As String
            Get
                Return Me.descripcionField
            End Get
            Set
                Me.descripcionField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class Aplicacion
        
        Private llaveIDField As Integer
        
        Private llavePadreIDField As Integer
        
        Private aplicacionIDField As Integer
        
        Private nombreField As String
        
        Private descripcionField As String
        
        '''<comentarios/>
        Public Property LlaveID() As Integer
            Get
                Return Me.llaveIDField
            End Get
            Set
                Me.llaveIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlavePadreID() As Integer
            Get
                Return Me.llavePadreIDField
            End Get
            Set
                Me.llavePadreIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property AplicacionID() As Integer
            Get
                Return Me.aplicacionIDField
            End Get
            Set
                Me.aplicacionIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Nombre() As String
            Get
                Return Me.nombreField
            End Get
            Set
                Me.nombreField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Descripcion() As String
            Get
                Return Me.descripcionField
            End Get
            Set
                Me.descripcionField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class Permiso
        
        Private llaveIDField As Integer
        
        Private llavePadreIDField As Integer
        
        Private permisoIDField As Integer
        
        Private nombreField As String
        
        Private descripcionField As String
        
        Private versionAplicacionIDField As Integer
        
        Private permisoAplicacionIDField As Integer
        
        '''<comentarios/>
        Public Property LlaveID() As Integer
            Get
                Return Me.llaveIDField
            End Get
            Set
                Me.llaveIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlavePadreID() As Integer
            Get
                Return Me.llavePadreIDField
            End Get
            Set
                Me.llavePadreIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property PermisoID() As Integer
            Get
                Return Me.permisoIDField
            End Get
            Set
                Me.permisoIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Nombre() As String
            Get
                Return Me.nombreField
            End Get
            Set
                Me.nombreField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Descripcion() As String
            Get
                Return Me.descripcionField
            End Get
            Set
                Me.descripcionField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property VersionAplicacionID() As Integer
            Get
                Return Me.versionAplicacionIDField
            End Get
            Set
                Me.versionAplicacionIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property PermisoAplicacionID() As Integer
            Get
                Return Me.permisoAplicacionIDField
            End Get
            Set
                Me.permisoAplicacionIDField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class DynamicUsrData
        
        Private llaveIDField As Integer
        
        Private llavePadreIDField As Integer
        
        Private noIdentidadField As Integer
        
        Private usrIdentidadField As Integer
        
        Private dynamicUsrIdentidadField As Integer
        
        Private datoField As String
        
        '''<comentarios/>
        Public Property LlaveID() As Integer
            Get
                Return Me.llaveIDField
            End Get
            Set
                Me.llaveIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlavePadreID() As Integer
            Get
                Return Me.llavePadreIDField
            End Get
            Set
                Me.llavePadreIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property NoIdentidad() As Integer
            Get
                Return Me.noIdentidadField
            End Get
            Set
                Me.noIdentidadField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property UsrIdentidad() As Integer
            Get
                Return Me.usrIdentidadField
            End Get
            Set
                Me.usrIdentidadField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property DynamicUsrIdentidad() As Integer
            Get
                Return Me.dynamicUsrIdentidadField
            End Get
            Set
                Me.dynamicUsrIdentidadField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Dato() As String
            Get
                Return Me.datoField
            End Get
            Set
                Me.datoField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class Identificador_sistema
        
        Private llaveIDField As Integer
        
        Private llavePadreIDField As Integer
        
        Private noIdentidadField As Integer
        
        Private identificadorHeaderField As String
        
        Private noPTBField As String
        
        Private iDCSIField As String
        
        Private nombreSistemaField As String
        
        Private divisionFilialField As String
        
        Private sistemaOrigenField As String
        
        Private moduloSistemaField As String
        
        Private idAplicacionField As String
        
        Private rutaField As String
        
        Private versionField As String
        
        Private equiposfilialesField As String
        
        Private fechaField As Date
        
        Private maquinaField As String
        
        Private usuarioField As String
        
        '''<comentarios/>
        Public Property LlaveID() As Integer
            Get
                Return Me.llaveIDField
            End Get
            Set
                Me.llaveIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlavePadreID() As Integer
            Get
                Return Me.llavePadreIDField
            End Get
            Set
                Me.llavePadreIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property NoIdentidad() As Integer
            Get
                Return Me.noIdentidadField
            End Get
            Set
                Me.noIdentidadField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property IdentificadorHeader() As String
            Get
                Return Me.identificadorHeaderField
            End Get
            Set
                Me.identificadorHeaderField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property NoPTB() As String
            Get
                Return Me.noPTBField
            End Get
            Set
                Me.noPTBField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property IDCSI() As String
            Get
                Return Me.iDCSIField
            End Get
            Set
                Me.iDCSIField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property NombreSistema() As String
            Get
                Return Me.nombreSistemaField
            End Get
            Set
                Me.nombreSistemaField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property DivisionFilial() As String
            Get
                Return Me.divisionFilialField
            End Get
            Set
                Me.divisionFilialField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property SistemaOrigen() As String
            Get
                Return Me.sistemaOrigenField
            End Get
            Set
                Me.sistemaOrigenField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property ModuloSistema() As String
            Get
                Return Me.moduloSistemaField
            End Get
            Set
                Me.moduloSistemaField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property IdAplicacion() As String
            Get
                Return Me.idAplicacionField
            End Get
            Set
                Me.idAplicacionField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Ruta() As String
            Get
                Return Me.rutaField
            End Get
            Set
                Me.rutaField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Version() As String
            Get
                Return Me.versionField
            End Get
            Set
                Me.versionField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Equiposfiliales() As String
            Get
                Return Me.equiposfilialesField
            End Get
            Set
                Me.equiposfilialesField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Fecha() As Date
            Get
                Return Me.fechaField
            End Get
            Set
                Me.fechaField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Maquina() As String
            Get
                Return Me.maquinaField
            End Get
            Set
                Me.maquinaField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property usuario() As String
            Get
                Return Me.usuarioField
            End Get
            Set
                Me.usuarioField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class DynamicUsr
        
        Private llaveIDField As Integer
        
        Private llavePadreIDField As Integer
        
        Private noIdentidadField As Integer
        
        Private etiquetaField As String
        
        Private tipoDatoField As String
        
        Private ordenField As Integer
        
        Private obligatorioField As Boolean
        
        Private minlenField As Integer
        
        Private maxlenField As Integer
        
        '''<comentarios/>
        Public Property LlaveID() As Integer
            Get
                Return Me.llaveIDField
            End Get
            Set
                Me.llaveIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlavePadreID() As Integer
            Get
                Return Me.llavePadreIDField
            End Get
            Set
                Me.llavePadreIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property NoIdentidad() As Integer
            Get
                Return Me.noIdentidadField
            End Get
            Set
                Me.noIdentidadField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Etiqueta() As String
            Get
                Return Me.etiquetaField
            End Get
            Set
                Me.etiquetaField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property TipoDato() As String
            Get
                Return Me.tipoDatoField
            End Get
            Set
                Me.tipoDatoField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Orden() As Integer
            Get
                Return Me.ordenField
            End Get
            Set
                Me.ordenField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Obligatorio() As Boolean
            Get
                Return Me.obligatorioField
            End Get
            Set
                Me.obligatorioField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Minlen() As Integer
            Get
                Return Me.minlenField
            End Get
            Set
                Me.minlenField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Maxlen() As Integer
            Get
                Return Me.maxlenField
            End Get
            Set
                Me.maxlenField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class Domicilio
        
        Private llaveIDField As Integer
        
        Private llavePadreIDField As Integer
        
        Private domicilioIDField As Integer
        
        Private descripcionField As String
        
        Private callNumField As String
        
        Private coloniaField As String
        
        Private delMunField As String
        
        Private estadoField As String
        
        Private codPosField As String
        
        Private paisField As String
        
        '''<comentarios/>
        Public Property LlaveID() As Integer
            Get
                Return Me.llaveIDField
            End Get
            Set
                Me.llaveIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property LlavePadreID() As Integer
            Get
                Return Me.llavePadreIDField
            End Get
            Set
                Me.llavePadreIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property DomicilioID() As Integer
            Get
                Return Me.domicilioIDField
            End Get
            Set
                Me.domicilioIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Descripcion() As String
            Get
                Return Me.descripcionField
            End Get
            Set
                Me.descripcionField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property CallNum() As String
            Get
                Return Me.callNumField
            End Get
            Set
                Me.callNumField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Colonia() As String
            Get
                Return Me.coloniaField
            End Get
            Set
                Me.coloniaField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property DelMun() As String
            Get
                Return Me.delMunField
            End Get
            Set
                Me.delMunField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Estado() As String
            Get
                Return Me.estadoField
            End Get
            Set
                Me.estadoField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property CodPos() As String
            Get
                Return Me.codPosField
            End Get
            Set
                Me.codPosField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Pais() As String
            Get
                Return Me.paisField
            End Get
            Set
                Me.paisField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Partial Public Class Respuesta
        
        Private respuestaIDField As String
        
        Private categoriaField As String
        
        Private descripcionCategoriaField As String
        
        Private descripcionRespuestaField As String
        
        Private respuestaToStringField As String
        
        '''<comentarios/>
        Public Property RespuestaID() As String
            Get
                Return Me.respuestaIDField
            End Get
            Set
                Me.respuestaIDField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property Categoria() As String
            Get
                Return Me.categoriaField
            End Get
            Set
                Me.categoriaField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property DescripcionCategoria() As String
            Get
                Return Me.descripcionCategoriaField
            End Get
            Set
                Me.descripcionCategoriaField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property DescripcionRespuesta() As String
            Get
                Return Me.descripcionRespuestaField
            End Get
            Set
                Me.descripcionRespuestaField = value
            End Set
        End Property
        
        '''<comentarios/>
        Public Property RespuestaToString() As String
            Get
                Return Me.respuestaToStringField
            End Get
            Set
                Me.respuestaToStringField = value
            End Set
        End Property
    End Class
    
    '''<comentarios/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.5420"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="Main")>  _
    Public Enum OperacionesABC
        
        '''<comentarios/>
        operAlta
        
        '''<comentarios/>
        operBaja
        
        '''<comentarios/>
        operCambio
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColDomCompletedEventHandler(ByVal sender As Object, ByVal e As ColDomCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColDomCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_DomicilioCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_DomicilioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_DomicilioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pDomicilio() As Domicilio
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Domicilio)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_DynamicUsrCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_DynamicUsrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_DynamicUsrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pDynamicUsr() As DynamicUsr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),DynamicUsr)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_Identificador_sistemaCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_Identificador_sistemaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_Identificador_sistemaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pIdentificador_sistema() As Identificador_sistema
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Identificador_sistema)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_DynamicUsrDataCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_DynamicUsrDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_DynamicUsrDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pDynamicUsrData() As DynamicUsrData
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),DynamicUsrData)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub LoginCompletedEventHandler(ByVal sender As Object, ByVal e As LoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub LoginSinProyectoCompletedEventHandler(ByVal sender As Object, ByVal e As LoginSinProyectoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoginSinProyectoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub LogOffCompletedEventHandler(ByVal sender As Object, ByVal e As LogOffCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LogOffCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),IDTicket)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ActualizarTicketCompletedEventHandler(ByVal sender As Object, ByVal e As ActualizarTicketCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ActualizarTicketCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property pTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub CambiarPasswordCompletedEventHandler(ByVal sender As Object, ByVal e As CambiarPasswordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CambiarPasswordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Respuesta)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub CambiarPasswordAjenoCompletedEventHandler(ByVal sender As Object, ByVal e As CambiarPasswordAjenoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CambiarPasswordAjenoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Respuesta)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ScriptValidaPwdCompletedEventHandler(ByVal sender As Object, ByVal e As ScriptValidaPwdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ScriptValidaPwdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Respuesta)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pstrScript() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pstrScriptID() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ValidaPermisoCompletedEventHandler(ByVal sender As Object, ByVal e As ValidaPermisoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidaPermisoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub CargaAplicacionCompletedEventHandler(ByVal sender As Object, ByVal e As CargaAplicacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaAplicacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Aplicacion
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Aplicacion)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub CargaVersionAplicacionCompletedEventHandler(ByVal sender As Object, ByVal e As CargaVersionAplicacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaVersionAplicacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As VersionAplicacion
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),VersionAplicacion)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub CargaPermisoCompletedEventHandler(ByVal sender As Object, ByVal e As CargaPermisoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaPermisoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Permiso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Permiso)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColAplicacionCompletedEventHandler(ByVal sender As Object, ByVal e As ColAplicacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColAplicacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColEstacionTrabajoCompletedEventHandler(ByVal sender As Object, ByVal e As ColEstacionTrabajoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColEstacionTrabajoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColVersionAplicacionCompletedEventHandler(ByVal sender As Object, ByVal e As ColVersionAplicacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColVersionAplicacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColPermisosVersionAplicacionCompletedEventHandler(ByVal sender As Object, ByVal e As ColPermisosVersionAplicacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColPermisosVersionAplicacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColAplicacionVersionPermisoCompletedEventHandler(ByVal sender As Object, ByVal e As ColAplicacionVersionPermisoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColAplicacionVersionPermisoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColModulosVersionAplicacionCompletedEventHandler(ByVal sender As Object, ByVal e As ColModulosVersionAplicacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColModulosVersionAplicacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColModulosReqVersionAplicacionCompletedEventHandler(ByVal sender As Object, ByVal e As ColModulosReqVersionAplicacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColModulosReqVersionAplicacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColRequerimientosModuloCompletedEventHandler(ByVal sender As Object, ByVal e As ColRequerimientosModuloCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColRequerimientosModuloCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColRequerimientosXModuloIDCompletedEventHandler(ByVal sender As Object, ByVal e As ColRequerimientosXModuloIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColRequerimientosXModuloIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_EstacionTrabajoCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_EstacionTrabajoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_EstacionTrabajoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pEstacionTrabajo() As EstacionTrabajo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),EstacionTrabajo)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_AplicacionCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_AplicacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_AplicacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pAplicacion() As Aplicacion
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Aplicacion)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_VersionAplicacionCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_VersionAplicacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_VersionAplicacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pVersionAplicacion() As VersionAplicacion
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),VersionAplicacion)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_PermisoCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_PermisoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_PermisoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pPermiso() As Permiso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Permiso)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_ModuloCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_ModuloCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_ModuloCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pModulo() As Modulo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Modulo)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_RequerimientoCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_RequerimientoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_RequerimientoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRequerimiento() As Requerimiento
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Requerimiento)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_ReqModuloCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_ReqModuloCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_ReqModuloCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pReqModulo() As ReqModulo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),ReqModulo)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub CargaClienteCompletedEventHandler(ByVal sender As Object, ByVal e As CargaClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Cliente
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Cliente)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_ClienteCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_ClienteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_ClienteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pCliente() As Cliente
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Cliente)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColProyectosCompletedEventHandler(ByVal sender As Object, ByVal e As ColProyectosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColProyectosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColClientesCompletedEventHandler(ByVal sender As Object, ByVal e As ColClientesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColClientesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColClientesProyectosCompletedEventHandler(ByVal sender As Object, ByVal e As ColClientesProyectosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColClientesProyectosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColProyectosUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As ColProyectosUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColProyectosUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub CargaProyectoCompletedEventHandler(ByVal sender As Object, ByVal e As CargaProyectoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaProyectoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Proyecto
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Proyecto)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_ProyectoCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_ProyectoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_ProyectoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pProyecto() As Proyecto
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Proyecto)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColPermisosUsuarioProyectoCompletedEventHandler(ByVal sender As Object, ByVal e As ColPermisosUsuarioProyectoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColPermisosUsuarioProyectoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColPermisosUsuarioProyectoSinTicketCompletedEventHandler(ByVal sender As Object, ByVal e As ColPermisosUsuarioProyectoSinTicketCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColPermisosUsuarioProyectoSinTicketCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColPermisosUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As ColPermisosUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColPermisosUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColHistAccesoCompletedEventHandler(ByVal sender As Object, ByVal e As ColHistAccesoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColHistAccesoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ObtenerHistAccesoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerHistAccesoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerHistAccesoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As HistAcceso
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),HistAcceso)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub CargaPoliticaSesionCompletedEventHandler(ByVal sender As Object, ByVal e As CargaPoliticaSesionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaPoliticaSesionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PoliticaSesion
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PoliticaSesion)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_PoliticaSesionCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_PoliticaSesionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_PoliticaSesionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pPoliticaSesion() As PoliticaSesion
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),PoliticaSesion)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColPoliticasSesionCompletedEventHandler(ByVal sender As Object, ByVal e As ColPoliticasSesionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColPoliticasSesionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub CargaPoliticaPwdCompletedEventHandler(ByVal sender As Object, ByVal e As CargaPoliticaPwdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaPoliticaPwdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As PoliticaPwd
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),PoliticaPwd)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_PoliticaPwdCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_PoliticaPwdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_PoliticaPwdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pPoliticaPwd() As PoliticaPwd
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),PoliticaPwd)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColPoliticasPwdCompletedEventHandler(ByVal sender As Object, ByVal e As ColPoliticasPwdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColPoliticasPwdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub DatosIdentidadUsrCompletedEventHandler(ByVal sender As Object, ByVal e As DatosIdentidadUsrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DatosIdentidadUsrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As IdentidadUsr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),IdentidadUsr)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColIdentidadUsrCompletedEventHandler(ByVal sender As Object, ByVal e As ColIdentidadUsrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColIdentidadUsrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColIdentidadUsrRespCompletedEventHandler(ByVal sender As Object, ByVal e As ColIdentidadUsrRespCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColIdentidadUsrRespCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColUsuariosCompletedEventHandler(ByVal sender As Object, ByVal e As ColUsuariosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColUsuariosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColPerfilesUsrCompletedEventHandler(ByVal sender As Object, ByVal e As ColPerfilesUsrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColPerfilesUsrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColPerfilesUsrPropioCompletedEventHandler(ByVal sender As Object, ByVal e As ColPerfilesUsrPropioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColPerfilesUsrPropioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColUsuariosAdministrarCompletedEventHandler(ByVal sender As Object, ByVal e As ColUsuariosAdministrarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColUsuariosAdministrarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColUsuariosAdministrartodoCompletedEventHandler(ByVal sender As Object, ByVal e As ColUsuariosAdministrartodoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColUsuariosAdministrartodoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_IdentidadUsrCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_IdentidadUsrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_IdentidadUsrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pIdentidadUsr() As IdentidadUsr
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),IdentidadUsr)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColGrupoAdminCompletedEventHandler(ByVal sender As Object, ByVal e As ColGrupoAdminCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColGrupoAdminCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property aGupoAdminID() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColGrupoAdminHijosCompletedEventHandler(ByVal sender As Object, ByVal e As ColGrupoAdminHijosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColGrupoAdminHijosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property aGupoAdminID() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_GrupoAdminCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_GrupoAdminCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_GrupoAdminCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pGrupoAdmin() As GrupoAdmin
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),GrupoAdmin)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColPerfilesCompletedEventHandler(ByVal sender As Object, ByVal e As ColPerfilesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColPerfilesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColUsuariosPerfilCompletedEventHandler(ByVal sender As Object, ByVal e As ColUsuariosPerfilCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColUsuariosPerfilCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColProyectosPerfilCompletedEventHandler(ByVal sender As Object, ByVal e As ColProyectosPerfilCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColProyectosPerfilCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColPermisosPerfilCompletedEventHandler(ByVal sender As Object, ByVal e As ColPermisosPerfilCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColPermisosPerfilCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColTodoslosPerfilesCompletedEventHandler(ByVal sender As Object, ByVal e As ColTodoslosPerfilesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColTodoslosPerfilesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_PerfilIdentidadUsrCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_PerfilIdentidadUsrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_PerfilIdentidadUsrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pIdentidadUsr() As PerfilUsuario
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),PerfilUsuario)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_PerfilUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_PerfilUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_PerfilUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pPerfilUsuario() As PerfilUsuario
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),PerfilUsuario)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_PermisoPerfilUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_PermisoPerfilUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_PermisoPerfilUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_PerfilUsuarioProyectoCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_PerfilUsuarioProyectoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_PerfilUsuarioProyectoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pobjProyecto() As Proyecto
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Proyecto)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub RegistraIntentoAccesoCompletedEventHandler(ByVal sender As Object, ByVal e As RegistraIntentoAccesoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegistraIntentoAccesoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Respuesta)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ObtenerHistAccesoUsrxEventoCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerHistAccesoUsrxEventoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerHistAccesoUsrxEventoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColEventosCompletedEventHandler(ByVal sender As Object, ByVal e As ColEventosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColEventosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColEventosResCompletedEventHandler(ByVal sender As Object, ByVal e As ColEventosResCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColEventosResCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub RegistraEventosCompletedEventHandler(ByVal sender As Object, ByVal e As RegistraEventosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegistraEventosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Respuesta)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColClientexGrupoAdminCompletedEventHandler(ByVal sender As Object, ByVal e As ColClientexGrupoAdminCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColClientexGrupoAdminCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ObtenerMenuCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerMenuCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerMenuCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ObtenerSubMenuCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerSubMenuCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerSubMenuCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ObtenerTemplateCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerTemplateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerTemplateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ObtenerElementosComboEstCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerElementosComboEstCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerElementosComboEstCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ObtenerElementosComboDinCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerElementosComboDinCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerElementosComboDinCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub EjecutaSPCondicionalCompletedEventHandler(ByVal sender As Object, ByVal e As EjecutaSPCondicionalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EjecutaSPCondicionalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColProyectosMegaCompletedEventHandler(ByVal sender As Object, ByVal e As ColProyectosMegaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColProyectosMegaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ObtenerCadenaConexionCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCadenaConexionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCadenaConexionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ObtenerCadenaConexionDSNCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerCadenaConexionDSNCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerCadenaConexionDSNCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Respuesta)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property sDSN() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strUsrPwd() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ABC_AppProyCompletedEventHandler(ByVal sender As Object, ByVal e As ABC_AppProyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ABC_AppProyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pAppProy() As AppProy
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),AppProy)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub CargaAppProyCompletedEventHandler(ByVal sender As Object, ByVal e As CargaAppProyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaAppProyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As AppProy
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),AppProy)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColAppProyCompletedEventHandler(ByVal sender As Object, ByVal e As ColAppProyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColAppProyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColAppProyTipoCompletedEventHandler(ByVal sender As Object, ByVal e As ColAppProyTipoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColAppProyTipoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColBusAppProyCompletedEventHandler(ByVal sender As Object, ByVal e As ColBusAppProyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColBusAppProyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pnProy() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pnApp() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub EncriptarPwdCompletedEventHandler(ByVal sender As Object, ByVal e As EncriptarPwdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EncriptarPwdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub DesencriptarPwdCompletedEventHandler(ByVal sender As Object, ByVal e As DesencriptarPwdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DesencriptarPwdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColResponsableAdministrarCompletedEventHandler(ByVal sender As Object, ByVal e As ColResponsableAdministrarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColResponsableAdministrarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ValidaUsrForaneoCompletedEventHandler(ByVal sender As Object, ByVal e As ValidaUsrForaneoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidaUsrForaneoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ValidaUsrForaneoIPCompletedEventHandler(ByVal sender As Object, ByVal e As ValidaUsrForaneoIPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidaUsrForaneoIPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColDynamicUsrCompletedEventHandler(ByVal sender As Object, ByVal e As ColDynamicUsrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColDynamicUsrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColIdentificador_sistemaCompletedEventHandler(ByVal sender As Object, ByVal e As ColIdentificador_sistemaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColIdentificador_sistemaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub Genera_ArchivoCompletedEventHandler(ByVal sender As Object, ByVal e As Genera_ArchivoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Genera_ArchivoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub ColDynamicUsrDataCompletedEventHandler(ByVal sender As Object, ByVal e As ColDynamicUsrDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ColDynamicUsrDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub GeneraNombreArchivoCompletedEventHandler(ByVal sender As Object, ByVal e As GeneraNombreArchivoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraNombreArchivoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub BuscaXNombreTablaCompletedEventHandler(ByVal sender As Object, ByVal e As BuscaXNombreTablaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BuscaXNombreTablaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub RptAdminPerfilPermisosCompletedEventHandler(ByVal sender As Object, ByVal e As RptAdminPerfilPermisosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RptAdminPerfilPermisosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub RptAdminUsrXGrupoCompletedEventHandler(ByVal sender As Object, ByVal e As RptAdminUsrXGrupoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RptAdminUsrXGrupoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub RptAdminUsrXPerfilCompletedEventHandler(ByVal sender As Object, ByVal e As RptAdminUsrXPerfilCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RptAdminUsrXPerfilCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub CambiarUltLoginCompletedEventHandler(ByVal sender As Object, ByVal e As CambiarUltLoginCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CambiarUltLoginCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub RegistraAccesoConsultasCompletedEventHandler(ByVal sender As Object, ByVal e As RegistraAccesoConsultasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegistraAccesoConsultasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub RegistraAccesoDigitalizacionCompletedEventHandler(ByVal sender As Object, ByVal e As RegistraAccesoDigitalizacionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RegistraAccesoDigitalizacionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub CargaConexionesCompletedEventHandler(ByVal sender As Object, ByVal e As CargaConexionesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaConexionesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub CargaConexionDiccionarioCompletedEventHandler(ByVal sender As Object, ByVal e As CargaConexionDiccionarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaConexionDiccionarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub CargaPWD_XMLCFGCompletedEventHandler(ByVal sender As Object, ByVal e As CargaPWD_XMLCFGCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CargaPWD_XMLCFGCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub AsignaPWD_XMLCFGCompletedEventHandler(ByVal sender As Object, ByVal e As AsignaPWD_XMLCFGCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AsignaPWD_XMLCFGCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub GetCFGParametoCompletedEventHandler(ByVal sender As Object, ByVal e As GetCFGParametoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCFGParametoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub SaveCFGParametoCompletedEventHandler(ByVal sender As Object, ByVal e As SaveCFGParametoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveCFGParametoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")>  _
    Public Delegate Sub HSMColPermisosUsrCompletedEventHandler(ByVal sender As Object, ByVal e As HSMColPermisosUsrCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HSMColPermisosUsrCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ptTicket() As IDTicket
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),IDTicket)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pRespuesta() As Respuesta
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Respuesta)
            End Get
        End Property
    End Class
End Namespace
